<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Gauge.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.GaugeWPFAssembly">
            <summary>
            Represents ChartWPFAssembly
            </summary>
        </member>
        <member name="F:Syncfusion.GaugeWPFAssembly.Name">
            <summary>
            Initializes Name
            </summary>
        </member>
        <member name="F:Syncfusion.GaugeWPFAssembly.Assembly">
            <summary>
            Initializes Assembly
            </summary>
        </member>
        <member name="F:Syncfusion.GaugeWPFAssembly.RootNamespace">
            <summary>
            Initializes RootNamespace
            </summary>
        </member>
        <member name="M:Syncfusion.GaugeWPFAssembly.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.GaugeWPFAssembly"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GaugeWPFAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            This delegate helps with resolving types and can be used as a eventhandler
            for a <see cref="E:System.AppDomain.AssemblyResolve"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data with information about the type.</param>
            <returns>A reference to the assembly where the type is located.</returns>
            <remarks>
            Use this handler when reading back types from a serialization stread
            saved with an earlier version of this assembly.
            </remarks>
        </member>
        <member name="T:Syncfusion.AssemblyInfo">
            <summary>
            Represents AssemblyInfo
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularCustomLabel">
            <summary>
            Represents a customizable label child element of the circular Gauge control. 
            </summary>
            <remarks>
            The Label can be placed anywhere within the Gauge using <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/>
            property.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.GaugeImage"/>
            <example>
            <code lang="XAML">
            <Window x:Class="CustomLabelSample.Window1" Title="CustomLabelSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.CustomLabels>
                        <syncfusion:CircularCustomLabel Name="speedometer" FontFamily="Calibri" BackgroundBrush="GhostWhite" FontSize="15" TextAngle="0" Location="50,60" LabelValue="Speedometer"/>
                        <syncfusion:CircularCustomLabel Name="mph" FontFamily="Calibri" BackgroundBrush="GhostWhite" FontSize="10" TextAngle="45" Location="70,75" LabelValue="MPH"/>
                    </syncfusion:CircularGauge.CustomLabels>
                </syncfusion:CircularGauge>
            </Window>
            </code>  
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CustomLabelSample
            {   
                public partial class Window1 : Window
                {
                    private CircularGauge m_gauge;
                    private CircularCustomLabel m_customLabel1;
                    private CircularCustomLabel m_customLabel2;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_gauge = new CircularGauge();
                        m_customLabel1 = new CircularCustomLabel();
                        m_customLabel2 = new CircularCustomLabel();
                        m_customLabel1.LabelValue = "Speedometer";
                        m_customLabel2.LabelValue = "MPH";
                        m_customLabel1.BackgroundBrush = Brushes.White;
                        m_customLabel2.BackgroundBrush = Brushes.White;
                        m_customLabel1.Location = new Point(50, 20);
                        m_customLabel2.Location = new Point(50, 80);
                        m_gauge.CustomLabels.Add(m_customLabel1);
                        m_gauge.CustomLabels.Add(m_customLabel2);
                        this.Content = m_gauge;
                    }
                }
             }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LocalizableGaugeElement">
            <summary>
            Represents the gauge elements that can be placed on a particular location within the 
            Gauge using the <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/> property
            </summary>
            <remarks>
            All the localizable gauge elements inherits this Class.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeElement">
            <summary>
            Represents the Gauge element's border and background brushes.
            </summary>
            <remarks>
            All the base classes of the gauge elements, such as <see cref="T:Syncfusion.Windows.Gauge.RangeBase"/> and <see cref="T:Syncfusion.Windows.Gauge.TickBase"/>  and classes such as
            <see cref="T:Syncfusion.Windows.Gauge.LinearPointer"/>, <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/> and <see cref="T:Syncfusion.Windows.Gauge.PointerCap"/> derives from this class.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeElement.BackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeElement.BackgroundBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeElement.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeElement.BorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeElement.BorderWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeElement.BorderWidth"/> dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeElement.BackgroundBrush">
            <summary>
            Gets or sets the background brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeElement.BorderBrush">
            <summary>
            Gets or sets the border brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeElement.BorderWidth">
            <summary>
            Gets or sets the border width of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LocalizableGaugeElement.LocationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LocalizableGaugeElement.OnLocationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnLocationChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LocalizableGaugeElement.OnLocationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LocalizableGaugeElement.LocationChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LocalizableGaugeElement.LocationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location">
            <summary>
            Gets or sets the location of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Point"/>
            Default value is 50,50.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularCustomLabel.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularCustomLabel.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularCustomLabel.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValue"/> dependency property, which stores the value of 
            the Label.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularCustomLabel"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnLabelValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnLabelValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnLabelValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnTextAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTextAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnTextAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularCustomLabel.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontFamily">
            <summary>
            Gets or sets the font family for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontFamily"/> 
            </value>        
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontSize">
            <summary>
            Gets or sets the font size for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 10.
            </value>     
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontWeight">
            <summary>
            Gets or sets the font weight for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularCustomLabel.FontWeight"/>
            </value>       
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularCustomLabel.LabelValue">
            <summary>
            Gets or sets the text of the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default value is String.Empty.
            </value>       
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularCustomLabel.TextAngle">
            <summary>
            Gets or sets the rotation angle applied to the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>      
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularGauge">
            <summary>
            Represents the CircularGauge UI element.
            </summary>
            <remarks>Circular gauges are perfect for presenting values of a specific range. 
            It can be used to create sophisticated gaming applications, dashboards, clocks, 
            industrial equipments and many more.In short it could be used for almost anything one could 
            ever imagine of, for representing a range of values in Circular form.
            Circular gauge can accommodate multiple scales, pointers, ranges, state indicators, labels 
            and images.It has a virtual bounded rectangle around it. The top-left corner of the virtual bounded 
            rectangle is represented by the co-ordinate(0, 0) and that of the bottom-right is represented 
            by (100, 100).Each and every gauge element is drawn inside the bounded rectangle 
            based on the location property.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearGauge"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/>
            <list type="table">
            <listheader>
            <term>Help Page</term>
            <description>Syntax</description>
            </listheader>
            <example>
            <list type="table">
            <listheader>
            <description>XAML Object Element Usage</description>
            </listheader>
            <example><code>
            <Window xmlns:local="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF">
            <local:CircularGauge Name="CircularGauge1"/></Window>
            </code></example>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <description>C#</description>
            </listheader>
            <example>
            <code>
            public partial class CircularGauge : Control
            </code></example>
            </list>
            <para/>
            </example>
            </list>
            <example>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> in XAML.
            <code>
            <Window x:Class="GaugeControlTesting.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sync="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF" xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF" Title="Circular Gauge">
             <Grid>
                <sync:CircularGauge CenterFrameFillColor="Brown" FrameType="FullCircle" Radius="150"> 
                       <sync:CircularGauge.Scales>
                           <sync:CircularScale Name="CircularScale" Radius="120" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" StartAngle="180" GapSweepAngle="360" ShadowOffset="3" ScaleBarSize="5">
                               <sync:CircularScale.Ticks>
                                   <sync:CircularLabelTick FontSize="10" TickStyle="MajorTick" BackgroundBrush="Red" TickPlacement="Inside" DistanceFromScale="5"/>
                                   <sync:CircularMarkTick TickHeight="9" TickShape="Rectangle" TickStyle="MajorTick" TickWidth="4" BackgroundBrush="Pink"/>
                                   <sync:CircularMarkTick TickHeight="4" TickWidth="1" TickStyle="MinorTick" BackgroundBrush="Aqua" TickPlacement="Inside"/>
                               </sync:CircularScale.Ticks>
                               <sync:CircularScale.Pointers>
                                   <sync:CircularPointer BackgroundBrush="Blue" BorderBrush="Red" PointerLength="130" PointerWidth="5" PointerNeedleType="Needle" PointerPlacement="Inside"/>                       
                               </sync:CircularScale.Pointers>
                               <sync:CircularScale.PointerCap>
                                   <sync:PointerCap BackgroundBrush="Green" BorderBrush="DarkGreen" BorderWidth="1" PointerCapRadius="5">
                                   </sync:PointerCap>
                               </sync:CircularScale.PointerCap>
                               <sync:CircularScale.Ranges>                        
                                   <sync:CircularRange StartValue="40" EndValue="60" StartWidth="0" EndWidth="20" RangePosition="Inside" DistanceFromScale="2"/>                        
                               </sync:CircularScale.Ranges>
                          </sync:CircularScale>            
                       </sync:CircularGauge.Scales>
                   </sync:CircularGauge>
               </Grid>
            </Window>
            </code>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> in C#.
            <code>
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularGaugeSample
            {
                public partial class Window1 : Window
                {
                   private CircularScale m_scale;
                   private StateIndicator m_indicator;<para/>
                   public Window1()
                   {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 1.5;
                        m_scale.Radius = 116;
                        this.circularGauge1.Scales.Add( m_scale );
                        CircularLabelTick majorLabelTick = new CircularLabelTick();
                        majorLabelTick.FontSize = 11;
                        majorLabelTick.TickStyle = TickStyle.MajorTick;
                        majorLabelTick.TickPlacement = ScalePlacement.Inside;
                        majorLabelTick.DistanceFromScale = 5;
                        CircularMarkTick majorTick = new CircularMarkTick();
                        majorTick.TickWidth = 4;
                        majorTick.TickHeight = 9;
                        majorTick.TickStyle = TickStyle.MajorTick;
                        majorTick.BackgroundBrush = new SolidColorBrush( Color.FromRgb( 0, 59, 137 ) );
                        majorTick.TickShape = TickShape.Ellipse;
                        CircularMarkTick minorTick = new CircularMarkTick();
                        minorTick.TickWidth = 1;
                        minorTick.TickHeight = 4;
                        minorTick.TickStyle = TickStyle.MinorTick;
                        minorTick.BackgroundBrush = new SolidColorBrush( Color.FromRgb( 0, 59, 137 ) );
                        m_scale.Ticks.Add( minorTick );
                        m_scale.Ticks.Add( majorTick );
                        m_scale.Ticks.Add( majorLabelTick );
                        m_scale.PointerCap.PointerCapRadius = 5;
                        m_scale.PointerCap.BackgroundBrush = new RadialGradientBrush( Color.FromRgb( 194, 207, 229 ), Color.FromRgb( 46, 94, 160 ) );
                        CircularPointer pointer1 = new CircularPointer();
                        pointer1.BackgroundBrush = new LinearGradientBrush( Color.FromRgb( 194, 207, 229 ), Color.FromRgb( 46, 94, 160 ), 90 );
                        pointer1.PointerPlacement = ScalePlacement.Outside;
                        m_scale.Pointers.Add( pointer1 );
                        m_indicator = new StateIndicator();
                        m_indicator.StateRanges.Add( new StateRange( 10, 20 ) );
                        m_indicator.StateRanges.Add( new StateRange( 50, 60 ) );
                        m_indicator.BackgroundBrush = new RadialGradientBrush( Colors.White, Colors.DarkGreen );
                        m_indicator.ActiveBackgroundBrush = new RadialGradientBrush( Colors.White, Colors.Red );
                        m_indicator.IndicatorWidth = 20;
                        m_indicator.IndicatorHeight = 20;
                        m_indicator.Location = new Point( 50, 80 );
                        circularGauge1.StateIndicators.Add( m_indicator );
                    }
                }
            }
            </code>
            </example> 
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeBase">
            <summary>
            Contains all the basic brushes, styles and adorner used by the Gauges. 
            This class is derived from the <see cref="T:System.Windows.Controls.Control"/> class
            </summary>
            <remarks>
            This class is the base class for all the controls such as <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>, <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/>
            and <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.children">
            <summary>
            Collection of visual children.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.partContainerBorder">
            <summary>
            Border of the Control template
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.customLabels">
            <summary>
            Collection of custom labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.firstCircleBorder">
            <summary>
            First frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.gaugeAdorner">
            <summary>
            Adorner used to display child elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.images">
            <summary>
            Collection of images.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.innerCircleBorder">
            <summary>
            Inner frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.secondCircleBorder">
            <summary>
            Second frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.stateIndicators">
            <summary>
            Collection of state indicators.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.zindex">
            <summary>
            ZIndex to Set for LocalizableGaugeElements
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.operatorStack">
            <summary>
            Stack to store the Operators.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.varStack">
            <summary>
            Stack to store the Operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.postfix">
            <summary>
            Stores the calculated postfix expression.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.StateIndicatorStyleProperty">
            <summary>
             Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.StateIndicatorStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.AdornerStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.AdornerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.ApplyFrameStylesProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.ApplyFrameStyles"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameFillColorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameThicknessProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameContentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameFillColorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameThicknessProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.SizeToContainerProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.SizeToContainer"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.IsColorMergeWithBaseProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.IsColorMergeWithBase"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeBase.EnableEffectsProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.EnableEffects"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.CalculateLabel(System.String,System.String)">
            <summary>
            Calculates the label value for the given formula.
            </summary>
            <param name="label">The current label value.</param>
            <param name="formula">The formula to be acted upon the label.</param>
            <returns>String value of the new label</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.InfixToPostfix(System.String)">
            <summary>
            Converts Infix notation to postfix notation.
            </summary>
            <param name="input">The input which is the Infix notation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.Evaluate(System.String)">
            <summary>
            Evaluates the input in postfix notation.
            </summary>
            <param name="input">The input in postfix notation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnApplyTemplate">
            <summary>
            Builds the current template's visual tree if necessary.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called to arrange and size the content of a control.
            </summary>
            <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
            <returns>The size of the control.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged"/> event, 
            using the specified information as part of the eventual event data. 
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel"/> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.GetColor(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Returns skined color from Color value.
            </summary>
            <param name="baseColor">BaseColor to be merged</param>
            <param name="skinColor">SkinColor to be merged</param>
            <returns>Returns merged color </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.GetMergedSolidandLinearBrush(System.Windows.Media.Brush,System.Windows.Media.Color)">
            <summary>
            Returns a merged brush from Color and brush value.
            </summary>
            <param name="oldbrush">Brush to be merged</param>
            <param name="newcolor">Color to be merged</param>
            <returns>Returns merged brush</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.MergeChannels(System.Int32,System.Int32)">
            <summary>
            Merges two color channels.
            </summary>
            <param name="baseChannel">BaseChannel to merge.</param>
            <param name="blendChannel">BlendChannel to merge.</param>
            <returns>Merged channels.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.MergeChannels(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Merges two colors.
            </summary>
            <param name="color">Color to merge.</param>
            <param name="blendColor">BlendColor to merge.</param>
            <returns>Merged colors.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.MergeColor(System.Windows.Media.Brush,System.Windows.Media.Color)">
            <summary>
            Merges the color.
            </summary>
            <param name="brushvalue">The brushvalue.</param>
            <param name="newcolor">The newcolor.</param>
            <returns>Returns Merged Brush</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.ChildLocationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="F:Syncfusion.Windows.Gauge.LocalizableGaugeElement.LocationProperty"/> property of a child is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire collection is refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.RefreshAdornerLayer">
            <summary>
            Refreshes the Adorner layer
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.RefreshBorders">
            <summary>
            Updates gauge frames.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.ConvertLocation(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Converts Logical bounds of range [0 - 100](as perceived by the user),<para/>
            to Actual control bounds with starting position as Center of the Gauge.
            </summary>
            <param name="p">Logical Point to convert.</param>
            <param name="width">Width of the gauge.</param>
            <param name="height">Height of the gauge.</param>
            <returns>Converted point.</returns>
            <remarks>
                    This method needs to calculate the ratio of logical point "p" to that of 100(the maximum 
            logical width/height possible) and multiply the ratio to that of the ActualWidth or ActualHeight
            as required, and hence get the point "p" converted to Control bounds.
                    But since we calculate actual control bounds with the Center of Gauge as origin, we need to 
            calculate the ratio, with respect to that of 50(i.e half of the logical maximum width/height
            possible) rather than to that of 100. 
                    For that, we need to bring the logical point "p" to values lesser than or equal to 50 
            and then calculate the ratio. If logical point "p" given by the user is greater than "50", 
            multiplying the ratio(calculated with 50 deducted logical point) with actual width or height / 2 
            will suffice.If the logical point given by the user is lesser than 50, we need to subtract the 
            result by half of the actual width/height as required.Hence get the Logical bounds converted to
            Actual actual with Center of gauge as the origin.
            </remarks>         
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.ConvertLocation(System.Windows.Point)">
            <summary>
            Converts point from range (0,0)-(100,100) to control bounds.
            </summary>
            <param name="p">Point to convert.</param>
            <returns>Converted point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.GaugeBaseLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the control is ready for presentation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnAdornerStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises AdornerStyleChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnAdornerStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAdornerStyleChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnApplyFrameStylesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises UseFrameStylesChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnApplyFrameStylesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnApplyFrameStylesChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnCenterFrameFillColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCenterFrameFillColorChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnCursorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="F:System.Windows.FrameworkElement.CursorProperty"/> is changed.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnFirstFrameFillColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnFirstFrameFillColorChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnFirstFrameThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Virtual method to raise the OnFirstFrameThickness event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnFirstFrameThicknessChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnFirstFrameThicknessChanged method of the instance, notifies of the dependency property values changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnSecondFrameFillColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSecondFrameFillColorChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnSecondFrameThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Virtual method to raise the OnSecondFrameThickness event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnInnerFrameContentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnInnerFrameContentChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnInnerFrameContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnSecondFrameThicknessChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSecondFrameThicknessChanged method of the instance, notifies of the dependency property values changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.UpdateChildrenLocation">
            <summary>
            Updates the location of children elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnIsColorMergeWithBaseChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises IsColorMergeWithBaseChangedz event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnIsColorMergeWithBaseChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnApplyFrameStylesChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnEnableEffectsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OnEnableEffectsChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeBase.OnEnableEffectsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEnableEffectsChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.GaugeAdorner">
            <summary>
            Gets or sets the GaugeAdorner.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.ChildrenCollection">
            <summary>
            Gets or sets the collection of visual children.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.PART_ContainerBorder">
            <summary>
            Gets the Border element.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.CustomLabels">
            <summary>
            Gets or sets the collection of custom labels.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.CustomLabelsCollection"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.CustomLabelsCollection"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.FirstCircleBorder">
            <summary>
            Gets the border of the First circle
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Controls.Border"/>
            </value>
            <seealso cref="T:System.Windows.Controls.Border"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.GaugeVisualBrush">
            <summary>
            Gets the Visual brush which of gauge visual
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.Images">
            <summary>
            Gets or sets the collection of images.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ImagesCollection"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.ImagesCollection"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.InnerCircleBorder">
            <summary>
            Gets the border element for the inner circle
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Controls.Border"/>
            </value>
            <seealso cref="T:System.Windows.Controls.Border"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SecondCircleBorder">
            <summary>
            Gets the border element for the second circle
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Controls.Border"/>
            </value>
            <seealso cref="T:System.Windows.Controls.Border"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.StateIndicators">
            <summary>
            Gets or sets the collection of state indicators.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.StateIndicatorsCollection"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.StateIndicatorsCollection"/>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.AdornerStyleChanged">
            <summary>
            Event that is raised when AdornerStyle property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.ApplyFrameStylesChanged">
            <summary>
            Event that is raised when ApplyFrameStyles property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameThicknessChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameThickness"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameThicknessChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameThickness"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.IsColorMergeWithBaseChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.IsColorMergeWithBase"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeBase.EnableEffectsChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeBase.EnableEffects"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.AdornerStyle">
            <summary>
            Gets or sets the adorner style.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Style"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.StateIndicatorStyle">
            <summary>
            StateIndicatorStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.ApplyFrameStyles">
            <summary>
            Gets or sets a value indicating whether to apply custom styles.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColor">
            <summary>
            Gets or sets the color used for drawing the inner frame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Color"/>
            Default value is Color.FromRgb( 69, 129, 239 ).
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameFillColor"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.CornerRadius">
            <summary>
            Gets or sets the gauge's corner radius .
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameBrush">
            <summary>
            Gets or sets the initial FrameType brush value for FirstFrame
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameFillColor">
            <summary>
            Gets or sets the color used for drawing the outer frame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Color"/>
            Default value is Color.FromRgb( 69, 129, 239 ).
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameFillColor"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameStyle">
            <summary>
            Gets or sets the style of the first frame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Style"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.FirstFrameThickness">
            <summary>
            Gets or sets the first frame thickness of the gauge.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameBrush">
            <summary>
            Gets or sets the initial FrameType brush value for InnerFrame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameContent">
            <summary>
            Gets or sets the the inner frame content to host any content inside the gauge. 
            This content will be added as inner frame content.
            </summary>
            <value>
            Type: <see cref="T:System.Object"/>
            Default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.InnerFrameStyle">
            <summary>
            Gets or sets the style of the inner frame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Style"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameBrush">
            <summary>
            Gets or sets the initial FrameType brush value for Secondframe
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameFillColor">
            <summary>
            Gets or sets the color used for drawing of SecondFrame color.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Color"/>
            Default value is Color.FromRgb( 69, 129, 239 ).
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeBase.CenterFrameFillColor"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameStyle">
            <summary>
            Gets or sets the style of the second frame.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Style"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SecondFrameThickness">
            <summary>
            Gets or sets the second frame thickness of the gauge.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.SizeToContainer">
            <summary>
            Gets or sets a value indicating whether gauge control should fit within its container.
            Default is false.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.IsColorMergeWithBase">
            <summary>
            Gets or sets a value indicating whether the colors applied to the frame fill colors should be merged.
            Default is true.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeBase.EnableEffects">
            <summary>
            Gets or sets a value indicating whether the colors applied to the frame fill colors should be merged.
            Default is true.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.m_firstHalfCircleBorder">
            <summary>
            First half frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.m_innerHalfCircleBorder">
            <summary>
            Inner half frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.m_scales">
            <summary>
            Collection of circular scales.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.m_secondHalfCircleBorder">
            <summary>
            Second half frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.FrameTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.FrameType"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerSweepDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerSweepDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleSweepDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleSweepDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGauge.RadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.Radius"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> class.
            Overrides DefaultStyleKeyProperty dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnApplyTemplate">
            <summary>
            Builds the current template's visual tree if necessary.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Called when the size of the Circular Gauge changes.
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire collection is refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.RefreshAdornerLayer">
            <summary>
            Refreshes the adorner layer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.RefreshBorders">
            <summary>
            Updates CircularGauge frames.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.CircularGaugeLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the control is ready for presentation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnBackgroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="F:System.Windows.Controls.Control.BackgroundProperty"/> of the gauge is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.ScaleRadiusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.Radius"/> property of a scale is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnFrameTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises FrameTypeChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnFrameTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnFrameTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnRadiusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRadiusChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGauge.OnRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises RadiusChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.Scales">
            <summary>
            Gets or sets a collection of circular scales.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ScaleCollection"/>
            </value>      
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.FirstHalfCircleBorder">
            <summary>
            Gets half vircle's first frame border.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.SecondHalfCircleBorder">
            <summary>
            Gets half circle's second frame border.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.InnerHalfCircleBorder">
            <summary>
            Gets half circle's inner frame border.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
            </value>
            <seealso cref="T:Syncfusion.Windows.Gauge.HalfCircleBorder"/>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularGauge.FrameTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.FrameType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularGauge.RadiusChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularGauge.Radius"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.PointerStyle">
            <summary>
            PointerStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.PointerCapStyle">
            <summary>
            PointerCapStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.MajorTickStyle">
            <summary>
            MajorTickStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.MinorTickStyle">
            <summary>
            MinorTickStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.LabelTickStyle">
            <summary>
            LabelTickStyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.FrameType">
            <summary>
            Gets or sets the CircularGauge's FrameType.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeFrameType"/>
            </value>       
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerRadius">
            <summary>
            Gets or sets the inner radius of the HalfCircle style CircularGauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 15.
            </value>       
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleInnerSweepDirection">
            <summary>
            Gets or sets the inner half circle's sweep direction for HalfCircle style CircularGauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.SweepDirection"/>
            Default value is <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise"/>
            </value>      
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.HalfCircleSweepDirection">
            <summary>
            Gets or sets the sweep direction of the HalfCircle style CircularGauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.SweepDirection"/>
            Default value is <see cref="F:System.Windows.Media.SweepDirection.Clockwise"/>
            </value>    
            <remarks>
            CouuterclockWise halfcircle can be obtained by setting
            the FrameType Property to CounterClockwiseHalfCircle.
            This Property is Obsolete.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGauge.Radius">
            <summary>
            Gets or sets the radius of the CircularGauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 150.
            </value>     
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularGaugeAdorner">
            <summary>
            Represents the adorner that displays the child elements of the circular gauge control.
            </summary>
            <remarks>
            All the elements of the <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> are laid on top of the CircularGaugeAdorner.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeAdorner">
            <summary>
            Represents a Adorner that displays the child elements of the Gauge.
            </summary>
            <remarks>
            The adorner is initialized by <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> class. All the child elements of the gauge
            are drawn on the adorner. This class is derived by <see cref="T:Syncfusion.Windows.Gauge.CircularGaugeAdorner"/> class.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeAdorner.GaugeParentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.GaugeParent"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.GaugeAdorner"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.#ctor(System.Windows.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.GaugeAdorner"/> class.
            </summary>
            <param name="adornedElement">Represents adorned element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.SetStyle(System.Windows.Style)">
            <summary>
            Sets the needed style for the adorner.
            </summary>
            <param name="style">Style to be used</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnAdornerWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAdornerWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnAdornerWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises AdornerWidthChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnAdornerHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises AdornerHeightChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnAdornerHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAdornerHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnGaugeParentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises GaugeParentChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeAdorner.OnGaugeParentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnGaugeParentChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeAdorner.GaugeParentChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.GaugeParent"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeAdorner.ChildrenCollection">
            <summary>
            Gets the collection of visual elements.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidth">
            <summary>
            Gets or sets the width for the adorner.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeight"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerHeight">
            <summary>
            Gets or sets the height of the adorner.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeAdorner.AdornerWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeAdorner.GaugeParent">
            <summary>
            Gets or sets the parent of the adorner.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/>
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularGaugeAdorner.RadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularGaugeAdorner.Radius"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGaugeAdorner.#ctor(System.Windows.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularGaugeAdorner"/> class.
            </summary>
            <param name="adornedElement">Represents adorned element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGaugeAdorner.OnRadiusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRadiusChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularGaugeAdorner.OnRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises RadiusChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularGaugeAdorner.RadiusChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularGaugeAdorner.Radius"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularGaugeAdorner.Radius">
            <summary>
            Gets or sets the radius for the adorner.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularLabelTickCollection">
            <summary>
            Represents the numeric label tick of the circular scale.
            </summary>
            <remarks>
            The CicularLabelTick can be made to display Labels for either the <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MajorTick"/> or 
            <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MinorTick"/>. The Tick to which the labels should be placed is set by using the 
            <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickStyle"/> property.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="CircularLableTickSample.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf" Title="CircularLableTickSample" Height="400" Width="400">
             <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="5" ScaleBarSize="10" GapSweepAngle="310" StartAngle="100">
                            <syncfusion:CircularScale.Ticks>
                                <syncfusion:CircularLabelTick FontSize="15" TickStyle="MajorTick" BackgroundBrush="GhostWhite" Name="CircularLabelTick1" TickPlacement="Outside" DistanceFromScale="5"/>                    
                            </syncfusion:CircularScale.Ticks>
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            </example> 
            <example>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularLableTickSample
            {
                public partial class Window1 : Window
                {
                    private CircularGauge m_gauge;
                    private CircularScale m_scale;
                    private CircularLabelTick m_label;<para/>
                    public Window1()
                    {
                        InitializeComponent();<para/>      
                        m_gauge = new CircularGauge();
                        m_scale = new CircularScale();
                        m_label = new CircularLabelTick();
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 10;
                        m_scale.Radius = 116;
                        m_label.TickPlacement = ScalePlacement.Inside;
                        m_label.DistanceFromScale = 5;
                        m_label.FontSize = 13;
                        m_label.TickStyle = TickStyle.MajorTick;
                        m_label.BackgroundBrush = Brushes.GhostWhite;
                        m_gauge.Scales.Add(m_scale);
                        m_scale.Ticks.Add(m_label);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.TickBase">
            <summary>
            Represents the abstract base class for Tick elements used in the Gauge control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.AngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.Angle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.DistanceFromScaleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.DistanceFromScale"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.TickPlacementProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickPlacement"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.TickStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.YDistanceFromScaleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.YDistanceFromScale"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.RangedBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.RangedBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.RangedBrushStartValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.RangedBrushStartValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickBase.RangedBrushEndValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.TickBase.RangedBrushEndValue"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.TickBase.AngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnDistanceFromScaleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.TickBase.DistanceFromScaleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnDistanceFromScaleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDistanceFromScaleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnTickPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.TickBase.TickPlacementChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnTickPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickPlacementChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnTickStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TickBase.OnTickStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.TickBase.TickStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.TickBase.AngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.TickBase.Angle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.TickBase.DistanceFromScaleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.TickBase.DistanceFromScale"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.TickBase.TickPlacementChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickPlacement"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.TickBase.TickStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickStyle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.Angle">
            <summary>
            Gets or sets the rotation angle of the tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.DistanceFromScale">
            <summary>
            Gets or sets the distance between the tick and the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.TickPlacement">
            <summary>
            Gets or sets the placement of tick, relative to the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ScalePlacement"/>
            Default value is ScalePlacement.Cross.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.TickStyle">
            <summary>
            Gets or sets the style of the tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickStyle"/>
            Default value is TickStyle.MajorTick.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.YDistanceFromScale">
            <summary>
            Gets or sets the Y axis distance between the tick and the scale bottom.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.RangedBrush">
            <summary>
            Gets or sets the Y axis distance between the tick and the scale bottom.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            Default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.RangedBrushStartValue">
            <summary>
            Gets or sets the start value of the ticks from which the <see cref="P:Syncfusion.Windows.Gauge.TickBase.RangedBrush"/> should be used.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.TickBase.RangedBrushEndValue">
            <summary>
            Gets or sets the end value of the ticks from which the <see cref="P:Syncfusion.Windows.Gauge.TickBase.RangedBrush"/> should be used.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.IncludeFirstValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IncludeFirstValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfoProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfo"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmicProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmic"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.LogBaseProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.LogBase"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabledProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormulaProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormula"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularLabelTick"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularLabelTick"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements and determines a size
            for the element.
            </summary>
            <remarks>
            Assuming the Scale's Maximum value will be the longest string, the required size
            is calculated based on the longest string's size.
            </remarks>
            <param name="constraint">The available size that this element can give to child
            elements.</param>
            <returns>
            The size that this element determines it needs during layout.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <remarks>
            Number of Segments that are possible of &quot;interval&quot; length is
            calculated by the variable ratio. Angleinterval calculates the angle interval
            between two such segments. As each tick is placed the angleToPlace and the
            labelvalues are incremented by angleinterval and interval respectively.If
            IsLogarithmic is set to True, the label values are converted into Log values
            before getting displayed. The labels are then rotated to the appropriate angle
            and to appropriate location(based on ScalePlacement).
            </remarks>
            <param name="drawingContext">The drawing instructions for a specific
            element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.GetDecimalCountNumber(System.Double)">
            <summary>
            Gets count of decimal digits from the double number.
            </summary>
            <remarks>
            For esthetic view, maximum count of decimal digits(i.e Precision) is 3.
            </remarks>
            <param name="value">Double number.</param>
            <returns>
            Count of decimal digits.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.GetLogDecimalCountNumber(System.Double)">
            <summary>
            Count the number of decimal digits for Log values.
            </summary>
            <param name="value">Double number.</param>
            <returns>Actual Count of decimal digits for Log Values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.GetTextLength(System.Windows.Media.FormattedText)">
            <summary>
            Gets the length of the text in pixels.
            </summary>
            <param name="formattedText">Text to get the length of.</param>
            <returns>Lenght of the text in pixels.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnNumberFormatInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNumberFormatInfoChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnNumberFormatInfoChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfoChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsLogarithmicChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsLogarithmicChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsLogarithmicChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmicChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnLogBaseChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnLogBaseChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnLogBaseChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.LogBaseChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsCalculateFormulaEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsCalculateFormulaEnabledChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsCalculateFormulaEnabled(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabledChanged"/> event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnCalculateFormulaChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCalculateFormulaChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnCalculateFormulaChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormulaChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsRelativeAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsRelativeAngleChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnIsRelativeAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngleChanged"/> event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfoChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfo"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmicChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmic"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.LogBaseChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.LogBase"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabledChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabled"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormulaChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormula"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontFamily">
            <summary>
            Gets or sets the font family for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontFamily"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontFamily"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontSize">
            <summary>
            Gets or sets the font size for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 10.
            </value>
            <seealso cref="T:System.Double"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontWeight">
            <summary>
            Gets or sets the font weight for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontWeight"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.FontWeight"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.IncludeFirstValue">
            <summary>
            Gets or sets a value indicating whether to include first tick value.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            </value>
            <seealso cref="T:System.Boolean"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.NumberFormatInfo">
            <summary>
            Gets or sets the Custom's NumberFormatInfo value
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Globalization.NumberFormatInfo"/>
            Default value is "null".
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabled">
            <summary>
            Gets or sets a value indicating whether IsCalculateFormula value is true or false,
            so that label values calculated using a formula were displayed on the scale.This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsCalculateFormulaEnabled is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormula"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormula">
            <summary>
            Gets or sets the Formula string that can be used to calculate the label values.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default CalculateFormula is string.Empty.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsCalculateFormulaEnabled"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmic">
            <summary>
            Gets or sets a value indicating whether IsLogarithmic value is true or false,
            so that log values can be displayed on the scale.This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsLogarithmic is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.LogBase"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.LogBase">
            <summary>
            Gets or sets the LogBase value that can be displayed in the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default LogBase is 10.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsLogarithmic"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularLabelTick.IsRelativeAngle">
            <summary>
            Gets or sets a value indicating whether the label's angle is relative to that of the 
            scale's angle
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsRelativeAngle is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularLabelTick.CalculateFormula"/>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularMarkTick">
            <summary>
            Represents the Tick of the circular scale. The Major/Minor ticks are set by
            using the <see cref="T:Syncfusion.Windows.Gauge.TickStyle"/> property.
            </summary>
            <remarks>
            The Ticks are of two types, Major and Minor Tick, which can be set by using the <see cref="T:Syncfusion.Windows.Gauge.TickStyle"/>
            property. <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MajorTick"/> is placed at an interval specified by <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValue"/> 
            and <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MinorTick"/> is placed at an interval specified
            by <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValue"/> property.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="CircularMarkTickSample.Window1" Title="CircularMarkTickSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="2" ScaleBarSize="10" GapSweepAngle="310" StartAngle="110" BackgroundBrush="LightBlue">
                            <syncfusion:CircularScale.Ticks>
                                <syncfusion:CircularLabelTick FontSize="15" TickStyle="MajorTick" BackgroundBrush="GhostWhite" Name="CircularLabelTick1" TickPlacement="Inside" DistanceFromScale="5"/>
                                <syncfusion:CircularMarkTick TickHeight="9" TickShape="Rectangle" TickStyle="MajorTick" Name="CircularMajorTick1" TickPlacement="Inside" TickWidth="2" BackgroundBrush="White"/>
                                <syncfusion:CircularMarkTick TickHeight="4" TickWidth="1" TickStyle="MinorTick" Name="CircularMinorTick1" BackgroundBrush="White" TickPlacement="Inside"/>
                            </syncfusion:CircularScale.Ticks>
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code> 
            <code lang="C#">
            using System;
            using System.Windows;  
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularMarkTickSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;      
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 5;
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale); 
                        CircularMarkTick m_majortick = new CircularMarkTick();
                        m_majortick.TickWidth = 4;
                        m_majortick.TickHeight = 9;
                        m_majortick.TickPlacement = ScalePlacement.Inside;
                        m_majortick.TickStyle = TickStyle.MajorTick;
                        m_majortick.BackgroundBrush = Brushes.White;
                        m_majortick.TickShape = TickShape.Ellipse; 
                        CircularMarkTick m_minortick = new CircularMarkTick();
                        m_minortick.TickWidth = 1;
                        m_minortick.TickHeight = 4;
                        m_minortick.TickPlacement = ScalePlacement.Inside;
                        m_minortick.TickStyle = TickStyle.MinorTick;
                        m_minortick.BackgroundBrush = Brushes.White;
                        m_scale.Ticks.Add(m_minortick);
                        m_scale.Ticks.Add(m_majortick);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.m_rect">
            <summary>
            Rect object used to draw the tick.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.TickHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.TickShapeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickShape"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.TickWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularMarkTick"/> class.
            Overrides the meta-data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularMarkTick.logInterval">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <remarks>
            Number of Segments that are possible of &quot;interval&quot; length is
            calculated by the variable ratio. Angleinterval calculates the angle interval
            between two such segments. As each tick is placed the angleToPlace and i
            are incremented by angleinterval and interval respectively. The 
            ticks are then rotated to the appropriate angle and then to the appropriate 
            location(based on ScalePlacement).
            </remarks>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.OnTickShapeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularMarkTick.TickShapeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.OnTickShapeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickShapeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularMarkTick.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularMarkTick.TickShapeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickShape"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularMarkTick.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickHeight">
            <summary>
            Gets or sets the height of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickShape">
            <summary>
            Gets or sets the shape of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickShape"/>
            Default value is TickShape.Rectangle.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularMarkTick.TickWidth">
            <summary>
            Gets or sets the width of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularPointer">
            <summary>
            Represents the pointer visual element that moves along the circular scale of the circular gauge.
            </summary>
            <remarks>
            To use a pointer as a MarkerPointer, the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleType"/> should be set to
            marker and <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle"/> can be choosed from the available styles.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="CircularPointerSample.Window1" Title="CircularPointerSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="2" ScaleBarSize="10" GapSweepAngle="310" StartAngle="110" BackgroundBrush="LightBlue"> 
                            <syncfusion:CircularScale.Pointers>
                                <syncfusion:CircularPointer BorderWidth="1" ointerWidth="15" PointerLength="100" NeedleStyle="Triangle" PointerNeedleType="Needle" PointerPlacement="Cross" Value="50"/>
                            </syncfusion:CircularScale.Pointers>
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularPointerSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;       
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 1.5;
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale);
                        CircularPointer pointer1 = new CircularPointer();          
                        pointer1.PointerLength = 100;
                        pointer1.PointerWidth = 20;
                        pointer1.PointerPlacement = ScalePlacement.Outside;
                        m_scale.Pointers.Add(pointer1);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.m_valueArgs">
            <summary>
            Event arguments used to fire the ValueChanged event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.m_needlePath">
            <summary>
            The geometry used to draw the pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.EnableSizeToContainerProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.EnableSizeToContainer"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.AnglePositionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.AnglePosition"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometryProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometry"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.MarkerCustomGeometryProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerCustomGeometry"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.PointerLengthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerLength"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleType"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacementProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacement"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.PointerWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.AnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.AnimationDuration"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.IsAnimationEnabledProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.IsAnimationEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteractionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteraction"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.IncrementKeyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.IncrementKey"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularPointer.DecrementKeyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.DecrementKey"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/> class.
            Overrides the meta-data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnInitialized(System.EventArgs)">
            <summary>
            Initializes the Circular Pointer.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CircularPointer_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the KeyDown event when the Key is pressed during the pointer is in focus.
            </summary>
            <param name="sender">CircularPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CircularPointer_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the MouseLeftButtonUp event when the mouse Left button is up on the pointer.
            </summary>
            <param name="sender">CircularPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CircularPointer_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the  MouseLeftButtonDown event when the mouse Left button is down on the pointer.
            </summary>
            <param name="sender">CircularPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CircularPointer_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the MouseMove event when the mouse cursor is moved on the pointer.
            </summary>
            <param name="sender">CircularPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.AngleToValue(System.Double,System.Double)">
            <summary>
            Method to convert Angle to Value in circularknob.
            </summary>
            <param name="angle">Angle value for conversion</param>
            <param name="pointervalue">previous pointer value</param>
            <returns>
            Value corresponding to that given angle
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size required for child elements in layout and determines a size
            for the this element.
            </summary>
            <remarks>
            For &quot;Bar&quot; pointer, the height required is 1. For all the remaining
            pointer types , the size required is equal to their Height and Width.
            </remarks>
            <param name="availableSize">The available size that this element can give to
            child elements.</param>
            <returns>
            The size that this element determines it needs during layout.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <remarks>
            Method returns the actual size used as the same value as that of the size given
            by its parent to arrange the pointer. Instead of actually arranging the pointer,
            it just initializes the m_needlePath according to the shape of the pointer.
            </remarks>
            <param name="finalSize">The final area within the parent that this element
            should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <remarks>
            The shadow offset is calculated according to the CircularGauge and is stored. If
            the pointer is of type Marker, there is no need to rotate the pointer. All the
            remaining pointer types are rotated by an angle of 180. The actual pointer and
            the shadow of the pointer is drawn.(Since the pointer is drawn at the center
            of the Gauge and then transformed to its actual location,all non-rectangular
            shaped pointers should be rotated)
            </remarks>
            <param name="drawingContext">The drawing instructions for a specific
            element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.LostFocus"/> routed event by
            using the event data that is provided. 
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains
            event data. This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus"/>
            event reaches this element in its route.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.GetAngleByValue(System.Double)">
            <summary>
            Gets the corresponding angle for scale value passed.
            </summary>
            <param name="value">Pointer value.</param>
            <returns>Calculated angle.</returns>
            <remarks>
            <list type="bullet">
                <listheader>Local Variables Used</listheader>
                <item>
                    <term>ratio</term>
                    <description>Calculates the number of segments(between Maximum and Minimum values),
                    that are possible,each of "value - Minimum" length.
                    </description>
                </item>
                <item>
                    <term>angle</term>
                   <description>Calculate the angles, of interval("value-Minimum") relative to Sweep angle 
                    of the Gauge and then adding the StartAngle to get the exact angle to place the Pointer.
                    </description>
                </item>
            </list></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.GetBarPath">
            <summary>
            Gets the geometry to draw the bar pointer.
            </summary>
            <remarks>
            If the angle between the StartAngle and the angle to which the pointer should be
            set is 360, then two Ellipses of equal X and Y radius are drawn representing the
            outer and inner circles of the bar pointer. Else a PathFigure of appropriate angle 
            is drawn from the StartAngle to the location of the pointer.
            </remarks>
            <returns>
            The geometry object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.GetMarkerPath">
            <summary>
            Gets the geometry to draw the marker pointer.
            </summary>
            <remarks>
            Appropriate PathFigure for various Marker.Styles are drawn.
            </remarks>
            <returns>
            The geometry object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.GetNeedlePath">
            <summary>
            Gets the geometry to draw the needle pointer.
            </summary>
            <remarks>
            Appropriate PathFigure of various NeedleStyles are set
            </remarks>
            <returns>
            The geometry object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.DisableMouseEvents(Syncfusion.Windows.Gauge.CircularPointer)">
            <summary>
            Method to diable the MouseMove events
            </summary>
            <param name="path">path to which mouse events are added</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.EnableMouseEvents(Syncfusion.Windows.Gauge.CircularPointer)">
            <summary>
            Method to enable Mousemove events.
            </summary>
            <param name="path">path to which mouse events are removed</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CoercePointerLength(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerLength"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CoercePointerLength(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerLength"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.Value"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CoerceValue(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.Value"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnAnglePositionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.AnglePositionChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnIncrementKeyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.IncrementKeyChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnDecrementKeyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.DecrementKeyChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnAnglePositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAnglePositionChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnIncrementKeyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIncrementKeyChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnDecrementKeyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDecrementKeyChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnMarkerStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnMarkerStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMarkerStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnNeedleCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometryChanged"/> event
            </summary>
            <param name="e">Contains data related to the event</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnNeedleCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNeedleCustomGeometryChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnMarkerCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometryChanged"/> event
            </summary>
            <param name="e">Contains data related to the event</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnMarkerCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNeedleCustomGeometryChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnNeedleStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNeedleStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnNeedleStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerLengthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerLengthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.PointerLengthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerNeedleTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleTypeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerNeedleTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerNeedleTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerPlacementChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacementChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.PointerWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnEnablePointerInteractionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteractionChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnPointerWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.ValueChanged">ValueChanged</see> event.
            </summary>
            <remarks>
            Animation is provided whenever the value of the pointer changes. Animation is
            provided to the pointer between pointer's old position and its new position.
            </remarks>
            <param name="e">Property change details, such as old value and new
            value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnEnablePointerInteractionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEnablePointerInteractionChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.PositionAnimationCompleted(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.ValueChanged"/> event.
            </summary>
            <param name="sender">The source of this event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.RefreshAnglePosition">
            <summary>
            Updates the angle position of the pointer.
            </summary>
            <remarks>
            The pointer is set to appropriate angle based on the value of the pointer. If
            the PointerType is Needle, then a simple rotation of the needle to the
            appropriate angle is enough. If it is of type Marker, then based on the
            pointer's ScalePlacement appropriate X position is calculated(Note: All the
            calculations are done with regard to the original position of the pointer, i.e
            Center of the Gauge) and the Marker is rotated.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnAnimationDurationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnAnimationDurationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.AnimationDurationChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnIsAnimationEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsAnimationEnabledChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.OnIsAnimationEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularPointer.IsAnimationEnabledChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularPointer.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.AnglePositionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.AnglePosition"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometryChanged">
            <summary>
            Event that will raise when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.MarkerCustomGeometryChanged">
            <summary>
            Event that will raise when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.PointerLengthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerLength"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacementChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacement"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.PointerWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.Value"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.AnimationDurationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.AnimationDuration"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.IsAnimationEnabledChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.AnimationDuration"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteractionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteraction"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.IncrementKeyChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.IncrementKey"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularPointer.DecrementKeyChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.DecrementKey"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.IsLogarithmic">
            <summary>
            Gets or sets a value indicating whether IsLogarithmic value is true or false,
            so that log values can be displayed on the scale.This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsLogarithmic is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularPointer.LogBase"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.LogBase">
            <summary>
            Gets or sets the LogBase value that can be displayed in the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default LogBase is 10.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularPointer.IsLogarithmic"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.AnglePosition">
            <summary>
            Gets or sets the angle to move the pointer to.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.EnableSizeToContainer">
            <summary>
            Gets or sets a value indicating whether [enable size to container].
            </summary>
            <value>
            	<c>true</c> if [enable size to container]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle">
            <summary>
            Gets or sets the shape of the marker pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle"/>
            Default value is MarkerStyle.Rectangle.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyle"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleCustomGeometry">
            <summary>
            Gets or sets the custom geometry value for Needle.
            </summary>
            <value>
            Type : <see cref="T:System.Windows.Media.Geometry"/>
            Default Value is Null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerCustomGeometry">
            <summary>
            Gets or sets the custom geometry value for Marker.
            </summary>
            <value>
            Type : <see cref="T:System.Windows.Media.Geometry"/>
            Default Value is Null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyle">
            <summary>
            Gets or sets the shape of the needle pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.NeedleStyle"/>
            Default value is NeedleStyle.Triangle.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularPointer.MarkerStyle"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.PointerLength">
            <summary>
            Gets or sets the length of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleType">
            <summary>
            Gets or sets the pointer needle type.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularPointer.PointerNeedleType"/>
            Default value is PointerNeedleType.Needle.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.PointerPlacement">
            <summary>
            Gets or sets the position to place the pointer relative to the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ScalePlacement"/>
            Default value is ScalePlacement.Inside.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.PointerWidth">
            <summary>
            Gets or sets the width of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.Value">
            <summary>
            Gets or sets the value indicated by the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.AnimationDuration">
            <summary>
            Gets or sets the animation duration of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is Double.NaN.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.IsAnimationEnabled">
            <summary>
            Gets or sets a value indicating whether animation is enabled or not.
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.EnablePointerInteraction">
            <summary>
            Gets or sets whether the pointer interactivity of the pointer is enabled or not.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is true.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.IncrementKey">
            <summary>
            Gets or sets the Increment key for the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Input.Key"/>
            Default value is Up key.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularPointer.DecrementKey">
            <summary>
            Gets or sets the Decrement key for the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Input.Key"/>
            Default value is Down key.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularRange">
            <summary>
            Represents the range visual element, which spans a range of consecutive values 
            represented by a visual.
            </summary>
            <remarks>
            The Range's <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> should be specified before <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/>
            because of the constraint that the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> should not be greater
            than <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/>    
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="CircularRangeSample.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf" Title="CircularRangeSample" Height="400" Width="400">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="2" ScaleBarSize="10" GapSweepAngle="310" StartAngle="110" BackgroundBrush="LightBlue">
                            <syncfusion:CircularScale.Ranges>
                                <syncfusion:CircularRange StartValue="80" EndValue="120" StartWidth="1" EndWidth="15" BorderWidth="1" BackgroundBrush="Red" RangePosition="Inside" DistanceFromScale="7"/>
                            </syncfusion:CircularScale.Ranges>
                        </syncfusion:CircularScale>            
                    </syncfusion:CircularGauge.Scales>        
                </syncfusion:CircularGauge>
            </Window> 
            </code>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularRangeSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;        
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 1.5;
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale);
                        CircularRange range1 = new CircularRange();
                        range1.StartValue = 40;
                        range1.EndValue = 80;
                        range1.StartWidth = 5;
                        range1.EndWidth = 20;
                        range1.RangePosition = ScalePlacement.Inside;
                        range1.DistanceFromScale = 7;
                        m_scale.Ranges.Add(range1);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.RangeBase">
            <summary>
            Represents the abstract base class for the Ranges used in Gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScaleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScale"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.EndValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.EndWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.RangePositionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.RangePosition"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.StartValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.StartWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.BindIndicatorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.BindIndicator"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RangeBase.IndicatorColorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.BindIndicator"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.CoerceEndValue(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.CoerceEndValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.RangeBase"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.CoerceStartValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.RangeBase"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.CoerceStartValue(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnDistanceFromScaleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDistanceFromScaleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnDistanceFromScaleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScaleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnEndValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.EndValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnEndValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEndValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnEndWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEndWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnEndWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.EndWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnRangePositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRangePositionChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnRangePositionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.RangePositionChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnStartValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.StartValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnStartValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStartValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnBindIndicatorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.StartValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnBindIndicatorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStartValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnIndicatorColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.IndicatorColorChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnIndicatorColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIndicatorColorChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnStartWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.RangeBase.StartWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangeBase.OnStartWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStartWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScaleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScale"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.EndValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.EndWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.RangePositionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.RangePosition"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.StartValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.StartWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.BindIndicatorChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.BindIndicator"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RangeBase.IndicatorColorChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RangeBase.IndicatorColor"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.DistanceFromScale">
            <summary>
            Gets or sets the distance between the range and the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.EndValue">
            <summary>
            Gets or sets the end value of the range.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <remarks>
            The Range's EndValue should be specified before the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/>, because of 
            the constraint, that <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> should be lesser than the EndValue
            </remarks>
            <seealso cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.EndWidth">
            <summary>
            Gets or sets the width of the range at its end.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.RangeBase.StartWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.RangePosition">
            <summary>
            Gets or sets the placement of the range 
            relatively to the scale. This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is ScalePlacement.Inside.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.StartValue">
            <summary>
            Gets or sets the start value of the range.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <remarks>
            The Range's StartValue should be specified after the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/>, because of 
            the constraint, that <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> should be greater than the StartValue
            </remarks>
            <seealso cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.StartWidth">
            <summary>
            Gets or sets the width of the range at its start.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.RangeBase.EndWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.BindIndicator">
            <summary>
            Gets or sets the width of the range at its start.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is false.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.RangeBase.BindIndicator"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RangeBase.IndicatorColor">
            <summary>
            Gets or sets the indicator color of the range.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            Default value is false.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularRange.m_rangePath">
            <summary>
            The geometry used to draw the range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularRange"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <remarks>
            The startOuterRadius,middleOuterRadius,endOuterRadius, startInnerRadius,middleInnerRadius
            and endInnerRadius were calculated according to the appropriate ScalePlacement values
            and then Range's PathFigure was created.
            </remarks>
            <param name="finalSize">The final area within the parent that this element
            should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.OnBindIndicatorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises StartValueChanged/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularRange.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CircularScale">
            <summary>
            Represents the scale visual element.
            </summary>
            <remarks>
            The CircularScale is the <see cref="P:System.Windows.Media.Visual.VisualParent"/> for the various elements of the Gauge, such as
            <see cref="T:Syncfusion.Windows.Gauge.CircularLabelTick"/>, <see cref="T:Syncfusion.Windows.Gauge.CircularMarkTick"/>, <see cref="T:Syncfusion.Windows.Gauge.CircularRange"/>,
            and <see cref="T:Syncfusion.Windows.Gauge.CircularPointer"/>.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="CircularScaleSample.Window1" Title="CircularScaleSample" Height="400" Width="400" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="2" ScaleBarSize="10" GapSweepAngle="310" StartAngle="110" BackgroundBrush="LightBlue">
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CircularScaleSample
            {
                public partial class Window1 : Window
                { 
                    private CircularScale m_scale;
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 5;
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ScaleBase">
            <summary>
            Represents the abstract base class for the Scale, used in Gauges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.m_ranges">
            <summary>
            Collection of the ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.m_ticks">
            <summary>
            Collection of the ticks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValue"/> dependency property.
            </summary>`
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.IsNumberDivisionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.IsNumberDivision"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.NumberMinorDivisionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.NumberMinorDivision"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.NumberMajorDivisionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.NumberMajorDivision"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffsetProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffset"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleBase.ScaleDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleDirection"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceMaximum(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceMaximum(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.ScaleBase"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceMinimum(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.ScaleBase"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceMinimum(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceScaleBarSize(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSize"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.ScaleBase"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.CoerceScaleBarSize(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSize"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMajorIntervalValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMajorIntervalValueChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMajorIntervalValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.MaximumChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMaximumChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMinimumChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.MinimumChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMinorIntervalValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMinorIntervalValueChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnIntervalValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIntervalValueChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnNumberDivisionValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNumberDivisionValueChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnMinorIntervalValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnScaleBarSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnScaleBarSizeChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnScaleDirectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnScaleBarSizeChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnScaleBarSizeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSizeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnScaleDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSizeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnShadowOffsetChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffsetChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScaleBase.OnShadowOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnShadowOffsetChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.Ranges">
            <summary>
            Gets or sets a Collection of ranges.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.RangesCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.Ticks">
            <summary>
            Gets or sets a Collection of ticks.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.TicksCollection"/>
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.MaximumChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.MinimumChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSizeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSize"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffsetChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffset"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScaleBase.ScaleDirectionChanged">
            <summary>
            Event that is raised when IsReversed property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.MajorIntervalValue">
            <summary>
            Gets or sets the interval between the major ticks.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum">
            <summary>
            Gets or sets the maximum value that can be displayed in the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <remarks>
            Maximum should be set before <seealso cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> value. Since Minimum
            should not be greater than Maximum value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum">
            <summary>
            Gets or sets the minimum value that can be displayed in the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <remarks>
            Minimum should be set after <seealso cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> value is set. Since Minimum
            should not be greater than Maximum value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.MinorIntervalValue">
            <summary>
            Gets or sets the interval between the minor ticks.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.IsNumberDivision">
            <summary>
            Gets or sets the boolean value to set the number division for Ticks.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.NumberMinorDivision">
            <summary>
            Gets or sets the value to set the number division for Ticks.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.NumberMajorDivision">
            <summary>
            Gets or sets the value to set the number major division.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSize">
            <summary>
            Gets or sets the width of the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffset">
            <summary>
            Gets or sets the offset of element's shadow.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleDirection">
            <summary>
            Gets or sets the ScaleDirection of scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is Clockwise direction.
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.m_pointerCapShadow">
            <summary>
            The pointer cap shadow.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.gaugeReference">
            <summary>
            Stores the gauge's reference
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.isDefaultScale">
            <summary>
            Default Scale bool property for Auto Scaling support.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.m_pointers">
            <summary>
            Collection of the pointers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.m_radiusRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.m_scalePath">
            <summary>
            The geomerty used to draw the scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.EnableCustomScaleAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.PointerCapProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.RadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.Radius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CircularScale.StartAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.StartAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.CircularScale"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.CircularScale"/> class.
            </summary>
            <remarks>
            Initializes all its Child Collections and registers its method CollectionChanged
            to its Children's CollectionChanged event.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.GetVisualChild(System.Int32)">
            <summary>
            Returns a child at the specified index from a collection of child elements.
            </summary>
            <remarks>
            Since PointerCapShadow is added as a Child element in the Constructor itself,
            index 0 represents it.Then comes the Ranges collection, then the Ticks and the
            last one in Pointers Collection. Pointers are added at the last because the
            latter the elements are added they will be on top of others.
            </remarks>
            <param name="index">he zero-based index of the requested child element in the
            collection.</param>
            <returns>
            The requested child element.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements and determines a size
            for the element.
            </summary>
            <remarks>
            The diameter of the CircularGauge is written as the required width and height.
            </remarks>
            <param name="availableSize">The available size that this element can give to
            child elements.</param>
            <returns>
            The size that this element determines it needs during layout.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <remarks>
            Loops through and gets each and every child element.Arranges Pointer element to
            the center of the Scale in such a way that the scale's center and the Pointer's
            height's center coincides. For marker, instead of arranging it at the center of the
            Scale it arranges it based on its ScalePlacement's Value, so as Tick are
            arranged. Remaining elements, it arranges them at the center of the scale.
            Then the Scale's PathFigure is created.
            </remarks>
            <param name="finalSize">The final area within the parent that this element
            should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.SetCustomStyles">
            <summary>
            Sets the custom styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CircularScaleLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the scale is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CoercePointerCap(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.CircularScale"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CoercePointerCap(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CoerceRadius(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.CircularScale.Radius"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.CircularScale"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CoerceRadius(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.CircularScale.Radius"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.ConvertToStageCoordinates(System.Double,System.Double,System.Windows.Point)">
            <summary>
            Converts polar coordinates to stage coordinates.
            </summary>
            <param name="radius">Radius to convert.</param>
            <param name="angle">Angle to convert.</param>
            <param name="pointToShift">Point to shift the result point by.</param>
            <returns>Calculated coordinates.</returns>
            <remarks>A particular point(x,y) on a circle can be calculated if, 
                <list>The radius of the circle is known.</list>     
                <list>Angle between the line connecting the center-point to the StartAngle's point<para/>
                and that of the point(x,y), whose position to be found, is known.
                </list>
            Then the point(x,y) can be found out by the following formula:
                           x : radius*Cos(angleInRadians)
                           y : radius*sin(angleInRadians) 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.GetAngleByValue(System.Double)">
            <summary>
            Gets the angle according to the value.
            </summary>
            <param name="value">The value to find the angle for.</param>
            <returns>Calculated angle.</returns>
            <remarks>
            <list type="bullet">
                <listheader>Local Variables Used</listheader>
                <item>
                    <term>ratio</term>
                    <description>Calculates the number of segments(between Maximum and Minimum values),
                    that are possible,each of "value - Minimum" length.
                    </description>
                </item>
                <item>
                    <term>angle</term>
                   <description>Calculate the angles, of interval("value-Minimum") relative to Sweep angle 
                    of the Gauge and then adding the StartAngle to get the exact angle to place the Pointer.
                    </description>
                </item>
            </list></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnGapSweepAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnGapSweepAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnGapSweepAngleChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnIsCustomScalingAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when Custom Scale Angle is changed
            </summary>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> property is changed.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> 
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> property is changed.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnPointerCapChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularScale.PointerCapChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnScaleDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises ScaleBarSizeChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnPointerCapChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerCapChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnRadiusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRadiusChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularScale.RadiusChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnStartAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CircularScale.StartAngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnStartAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStartAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.PointerCapPointerCapRadiusChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when <see cref="F:Syncfusion.Windows.Gauge.CircularScale.PointerCapProperty"/>is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.PointerNeedleTypeChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the type of any pointer is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.RefreshCircularScale">
            <summary>
            Refreshes the Circular Scale by invalidating the Visual of all its child elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CircularScale.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when element is added, replaced or removed from the collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
            <remarks>
            Whenever Ticks,Ranges and Pointers are added, i.e when thier CollectionChanged
            event is raised, this method will be called. This method adds all the elements
            as Scale's Visual child.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.Pointers">
            <summary>
            Gets or sets a collection of pointers.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.PointersCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.RadiusRatio">
            <summary>
            Gets or sets the ratio between the scale and the gauge.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularScale.PointerCapChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularScale.RadiusChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularScale.Radius"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CircularScale.StartAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CircularScale.StartAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.GapSweepAngle">
            <summary>
            Gets or sets the number of degrees that the scale will sweep in a circle.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap">
            <summary>
            Gets or sets the PointerCap of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.CircularScale.PointerCap"/>
            </value>       
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.Radius">
            <summary>
            Gets or sets the radius of the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.StartAngle">
            <summary>
            Gets or sets the start angle from which the scale should be drawn.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.EnableCustomScaleAngle">
            <summary>
            Sets or Gets the IsCustomScalingAngle property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CircularScale.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value>Type: <see cref="T:System.Int32">Returns the count of the children</see></value>
            <remarks>
            Returns number of Children it contains. The addition of 2 is to add PointerCap
            and PointerCapShadow to the count.
            </remarks>
            <returns>int</returns>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.HalfCircleBorder">
            <summary>
            Represents the half circle border of the circular gauge control.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Gauge.GaugeFrameType"/> should be set to <see cref="F:Syncfusion.Windows.Gauge.GaugeFrameType.HalfCircle"/>
            inorder to display a half circle shape <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="HalfCircleSample.Window1" Title="HalfCircleSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge" FrameType="HalfCircle">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100"> 
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace HalfCircleSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale);      
                        m_gauge.FrameType = GaugeFrameType.HalfCircle;
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.BackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BackgroundBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.CircleSweepDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.CircleSweepDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleSweepDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleSweepDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.HalfCircleBorder.FrameTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for FrameType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.HalfCircleBorder.ConvertToStageCoordinates(System.Double,System.Double,System.Windows.Point)">
            <summary>
            Converts polar coordinates to stage coordinates.
            </summary>
            <param name="radius">Radius of the Scale</param>
            <param name="angle">The angle between 0 and the point whose stage coordinates should be found</param>
            <param name="pointToShift">The point to shift to</param>
            <returns>Stage Coordinates</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.HalfCircleBorder.OnBorderWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.HalfCircleBorder.OnBorderWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBorderWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.HalfCircleBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="dc">The drawing instructions for a specific element.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidth"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BackgroundBrush">
            <summary>
            Gets or sets the background brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.FrameType">
            <summary>
            Gets or sets Type of the Frame.
            </summary>
            <value>
            GaugeFrameType
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderBrush">
            <summary>
            Gets or sets the border brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BackgroundBrush"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.CircleSweepDirection">
            <summary>
            Gets or sets half circle's sweep direction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleRadius">
            <summary>
            Gets or sets half circle's inner circle radius
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.HalfCircleBorder.InnerCircleSweepDirection">
            <summary>
            Gets or sets inner circle's sweep direction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.PointerCap">
            <summary>
            Represents the pointer cap visual element that "caps" the needle pointer.
            </summary>
            <remarks>
            PointerCap is allowed only for <see cref="F:Syncfusion.Windows.Gauge.PointerNeedleType.Needle"/> type pointer.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.PointerCapShadow"/>
            <example>
            <code lang="XAML">
            <Window x:Class="PointerCapSample.Window1" Title="PointerCapSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100">
                            <syncfusion:CircularScale.PointerCap>
                                <syncfusion:PointerCap BackgroundBrush="Gray" BorderBrush="Black" PointerCapRadius="7" BorderWidth="2" CapOnTop="True"/>
                            </syncfusion:CircularScale.PointerCap>
                            <syncfusion:CircularScale.Pointers>
                                <syncfusion:CircularPointer BorderWidth="1" PointerWidth="15" PointerLength="100" NeedleStyle="Triangle" PointerNeedleType="Needle" PointerPlacement="Cross" Value="50"/>
                            </syncfusion:CircularScale.Pointers>
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Windows;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace PointerCapSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();        
                        m_scale.Radius = 116;          
                        this.m_gauge.Scales.Add(m_scale);    
                        m_scale.PointerCap.PointerCapRadius = 5;
                        m_scale.PointerCap.BackgroundBrush = new RadialGradientBrush(Color.FromRgb(194, 207, 229), Color.FromRgb(46, 94, 160));
                        CircularPointer pointer1 = new CircularPointer();
                        pointer1.BackgroundBrush = Brushes.Orange;
                        pointer1.BorderBrush = Brushes.Black;
                        pointer1.PointerLength = 100;
                        pointer1.PointerWidth = 10;
                        pointer1.PointerPlacement = ScalePlacement.Outside;
                        m_scale.Pointers.Add(pointer1);
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCap.CapOnTopProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.PointerCap.CapOnTop"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadius"/> dependency p0roperty.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCap.PointerCapTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapType"/> dependency p0roperty.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCap.PointerCapCustomGeometryProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.Windows.Gauge.PointerCap.PointerCapCustomGeometryProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.PointerCap"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.PointerCap"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the cap element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
             Raises the System.Windows.FrameworkElement.SizeChanged event, using the specified
             information as part of the eventual event data.
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadiusChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapRadiusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerCapRadiusChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerCapTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.PointerCap.PointerCapTypeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises when value of Visibility depencency property is changed.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.PointerCap"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerCapCustomGeometryChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnPointerCapCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises PointerCapCustomGeometryChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.SetScope(Syncfusion.Windows.Gauge.CircularGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCap.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadiusChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadius"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.PointerCap.PointerCapTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.PointerCap.VisibilityChanged">
            <summary>
            Event that is raised when <see cref="T:System.Windows.Visibility"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.PointerCap.PointerCapCustomGeometryChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.PointerCap.CapOnTop">
            <summary>
            Gets or sets a value indicating whether a cap locates at the top or at the<para/>
            bottom of the needle.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is true.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapRadius">
            <summary>
            Gets or sets the radius for the cap.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapType">
            <summary>
            Gets or sets the cap style.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapType"/>
            Default value is PointerCapType.Default.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.PointerCap.PointerCapCustomGeometry">
            <summary>
            Gets or sets a custom geometry for the Pointer Cap.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Geometry"/>
            Default value is null.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.PointerCapShadow">
            <summary>
            Represents a pointer cap's shadow visual element.
            </summary>
            <remarks>
            PointerCap is allowed only for <see cref="F:Syncfusion.Windows.Gauge.PointerNeedleType.Needle"/> type pointer. The shadow's
            offset from the <see cref="T:Syncfusion.Windows.Gauge.PointerCap"/> can be specified by using <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.ShadowOffset"/> 
            property.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.PointerCap"/>
            <example>
            <code lang="XAML">
            <Window x:Class="PointerCapShadowSample.Window1" Title="PointerCapShadowSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" ShadowOffset="5">
                            <syncfusion:CircularScale.PointerCap>
                                <syncfusion:PointerCap BackgroundBrush="Gray" BorderBrush="Black" PointerCapRadius="7" BorderWidth="2" CapOnTop="True"/>
                            </syncfusion:CircularScale.PointerCap> 
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace PointerCapShadowSample
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.Radius = 116;
                        m_scale.ShadowOffset = 5;
                        this.m_gauge.Scales.Add(m_scale);
                        m_scale.PointerCap.PointerCapRadius = 5;
                        m_scale.PointerCap.BackgroundBrush = new RadialGradientBrush(Color.FromRgb(194, 207, 229), Color.FromRgb(46, 94, 160));
                        this.Content = m_gauge;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCapShadow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.PointerCapShadow"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCapShadow.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <remarks>
            PointerCapShadow checks whether PointerCap is present and also checks wher
            PointerCap Visibility is not Hidden or Collapsed. Then it renders itself with a
            maximum Offset of 0.5.
            </remarks>
            <param name="dc">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCapShadow.PointerCapShadowLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the element is laid out, rendered, and ready for interaction.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointerCapShadow.PointerCapVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the <see cref="T:System.Windows.Visibility"/> cap property changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ScalesLayoutPanel">
            <summary>
            Represents layout panel for the <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>.
            </summary>
            /// <remarks>
            All the elements of the <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/> are arranged at the center of the Panel and
            then transformed to their respective positions.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSize"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScalesLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.ScalesLayoutPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScalesLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScalesLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScalesLayoutPanel.OnPanelSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPanelSizeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ScalesLayoutPanel.OnPanelSizeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSizeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSizeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSize"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.ScalesLayoutPanel.PanelSize">
            <summary>
            Gets or sets the size of the panel.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ScaleCollection">
            <summary>
            Observable collection of scales.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.StateIndicatorsCollection">
            <summary>
            Observable collection of state indicators.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.StateRangeCollection">
            <summary>
            Observable collection of state ranges.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CustomLabelsCollection">
            <summary>
            Observable collection of custom labels.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ImagesCollection">
            <summary>
            Observable collection of images.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearScaleCollection">
            <summary>
            Observable collection of linear scales.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CharacterCollection">
            <summary>
            Observable collection of characters.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.SegmentCollection">
            <summary>
            Observable collection of segments.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1">
            <summary>
            Collection of visual children.
            </summary>
            <typeparam name="T">Visual elements Type</typeparam>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.VisualChildrenCollection`1.m_visualParent">
            <summary>
            Parent of visual element.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.VisualChildrenCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Gauge.VisualChildrenCollection`1.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.VisualChildrenCollection`1"/> class.
            </summary>
            <param name="visualParent">Parent of the Visual</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.VisualChildrenCollection`1.VisualParent">
            <summary>
            Gets the parent of visual element.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.RangesCollection">
            <summary>
            Collection of ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangesCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.RangesCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RangesCollection.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.RangesCollection"/> class.
            </summary>
            <param name="parent">Range's parent</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.PointersCollection">
            <summary>
            Collection of pointers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointersCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.PointersCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.PointersCollection.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.PointersCollection"/> class.
            </summary>
            <param name="parent">Pointer's parent</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.TicksCollection">
            <summary>
            Collection of ticks.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TicksCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.TicksCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.TicksCollection.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.TicksCollection"/> class.
            </summary>
            <param name="parent">Tick's parent</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearPointersCollection">
            <summary>
            Collection of pointers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointersCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearPointersCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointersCollection.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearPointersCollection"/> class.
            </summary>
            <param name="parent">Pointer's parent</param>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CharacterBase">
            <summary>
            Represents the character base class.
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="CharacterSample.Window1" Title="CharacterSample" Height="400"
            Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:DigitalGauge Name="digitalGauge1" Width="350" Height="100"
                                             CharacterCount="9" CharacterHeight="50" CenterFrameFillColor="Gray"
                                             Foreground="Red" DimmedBrush="LightGray" SegmentWidth="5" 
                                             SegmentSpacing="3"
                                             CharacterSpacing="5" Value="8:50 AM" />
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CharacterSample
            {
                    public partial class Window1 : Window
                    {
                        private DigitalGauge digitalGauge1;            
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            digitalGauge1 = new DigitalGauge();
                            digitalGauge1.Height = 100;
                            digitalGauge1.Width = 350;
                            digitalGauge1.CharacterCount = 9;
                            digitalGauge1.CharacterHeight = 50;
                            digitalGauge1.CenterFrameFillColor = Colors.Gray;
                            digitalGauge1.Foreground = new SolidColorBrush(Colors.Red);
                            digitalGauge1.DimmedBrush = new SolidColorBrush(Colors.LightGray);          
                            digitalGauge1.SegmentWidth = 5;
                            digitalGauge1.SegmentSpacing = 3;
                            digitalGauge1.CharacterSpacing = 5;
                            digitalGauge1.Value = "8:50 AM";
                            this.Content = digitalGauge1;
                        }
                    }
                  }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.m_listSegments">
            <summary>
            Collection of boolean values indicating what character segments should be 
            drawn with foreground brush.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacingProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacing"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.DrawColonProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DrawColon"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.DrawDotProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DrawDot"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.ForegroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.ForegroundBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacingProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacing"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterBase.SegmentWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.SegmentWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnCharacterHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharacterHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnCharacterHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnCharactersSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharactersSpacingChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnCharactersSpacingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacingChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDimmedBrushChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrushChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDimmedBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDimmedBrushChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDrawColonChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDrawColonChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDrawColonChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.DrawColonChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDrawDotChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.DrawDotChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnDrawDotChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDrawDotChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnSegmentsSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSegmentsSpacingChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterBase.OnSegmentsSpacingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacingChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.Segments">
            <summary>
            Gets or sets the collection of boolean values indicating what character 
            segments should be drawn with foreground brush.
            </summary>
            <value>
            Type: <see cref="T:System.Collections.Generic.List`1"/>
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacingChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacing"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrushChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrush"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.DrawColonChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DrawColon"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.DrawDotChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.DrawDot"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacingChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacing"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.CharacterHeight">
            <summary>
            Gets or sets the height of the character.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.CharactersSpacing">
            <summary>
            Gets or sets the space between the characters.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.DimmedBrush">
            <summary>
            Gets or sets the dimmed brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.DrawColon">
            <summary>
            Gets or sets a value indicating whether to draw the colon.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.DrawDot">
            <summary>
            Gets or sets a value indicating whether to draw the dot.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.ForegroundBrush">
            <summary>
            Gets or sets the foreground brush of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.SegmentsSpacing">
            <summary>
            Gets or sets the space between the segments.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterBase.SegmentWidth">
            <summary>
            Gets or sets the width of the segments.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 2.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CharacterFourteen">
            <summary>
            Represent the fourteen segmented character element.
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="CharacterFourteenSample.Window1" Title="CharacterFourteenSample" Height="400"
            Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:DigitalGauge Name="digitalGauge1" Width="350" Height="100"
                                             CharacterCount="9" CharacterHeight="50" CenterFrameFillColor="Gray"
                                             Foreground="Red" DimmedBrush="LightGray" SegmentWidth="5" 
                                             SkewAngleX="-10" SegmentSpacing="3" CharacterSpacing="5" 
                                             Value="8:50 AM" CharacterType="SegmentFourteen" />
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CharacterFourteenSample
            {
                    public partial class Window1 : Window
                    {
                        private DigitalGauge digitalGauge1;
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            digitalGauge1 = new DigitalGauge();
                            digitalGauge1.Height = 100;
                            digitalGauge1.Width = 350;
                            digitalGauge1.CharacterCount = 9;
                            digitalGauge1.CharacterHeight = 50;
                            digitalGauge1.CenterFrameFillColor = Colors.Gray;
                            digitalGauge1.Foreground = new SolidColorBrush(Colors.Red);
                            digitalGauge1.DimmedBrush = new SolidColorBrush(Colors.LightGray);
                            digitalGauge1.CharacterType = CharacterType.SegmentFourteen;
                            digitalGauge1.SkewAngleX = -10;
                            digitalGauge1.SegmentWidth = 5;
                            digitalGauge1.SegmentSpacing = 3;
                            digitalGauge1.CharacterSpacing = 5;
                            digitalGauge1.Value = "8:50 AM";
                            this.Content = digitalGauge1;
                        }
                    }
            }   
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterFourteen.m_countPushes">
            <summary>
            Value indicating the count of transform pushes into the drawing context.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterFourteen.m_listSegments">
            <summary>
            Collection of boolean values indicating what character segments should be 
            drawn with foreground brush.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterFourteen.m_segment">
            <summary>
            Geometry used for drawing the segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterFourteen.m_shortSegment">
            <summary>
            Geometry used for drawing the central horizontal segments.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterFourteen.m_slopingSegment">
            <summary>
            Geometry used for drawing the sloping segments.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.DrawSegments(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Draws character segments.
            </summary>
            <param name="drawingContext">The drawing instructions.</param>
            <param name="segmentBrush">Brush used for drawing the segment.</param>
            <param name="isActive">Indicates whether segment is active.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.DrawShortSegments(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Draws central horizontal character segments.
            </summary>
            <param name="drawingContext">The drawing instructions.</param>
            <param name="segmentBrush">Brush used for drawing the segment.</param>
            <param name="isActive">Indicates whether segment is active.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.DrawSlopingSegments(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Draws sloping character segments.
            </summary>
            <param name="drawingContext">The drawing instructions.</param>
            <param name="segmentBrush">Brush used for drawing the segment.</param>
            <param name="isActive">Indicates whether segment is active.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterFourteen.GetSegmentPath(System.Double,System.Double)">
            <summary>
            Gets the geometry used for drawing the character segment.
            </summary>
            <param name="height">Height of the character segment.</param>
            <param name="segmentSpacing">Spacing between the segments</param>
            <returns>Geometry of the segment</returns>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterFourteen.Segments">
            <summary>
            Gets or sets the collection of boolean values indicating what character 
            segments should be drawn with foreground brush.
            </summary>
            <value>
            Type: <see cref="T:System.Collections.Generic.List`1"/>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CharacterSeven">
            <summary>
            Represents the seven segmented character element.
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="CharacterSevenSample.Window1" Title="CharacterSevenSample" Height="400"
            Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:DigitalGauge Name="digitalGauge1" Width="350" Height="100"
                                             CharacterCount="9" CharacterHeight="50" CenterFrameFillColor="Gray"
                                             Foreground="Red" DimmedBrush="LightGray" SegmentWidth="5" 
                                             SkewAngleX="-10" SegmentSpacing="3" CharacterSpacing="5"
                                             Value="8:50 AM" CharacterType="SegmentSeven" />
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CharacterSevenSample
            {
                    public partial class Window1 : Window
                    {
                        private DigitalGauge digitalGauge1;
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            digitalGauge1 = new DigitalGauge();                
                            digitalGauge1.Height = 100;
                            digitalGauge1.Width = 350;
                            digitalGauge1.CharacterCount = 9;
                            digitalGauge1.CharacterHeight = 50;
                            digitalGauge1.CenterFrameFillColor = Colors.Gray;
                            digitalGauge1.Foreground = new SolidColorBrush(Colors.Red);
                            digitalGauge1.DimmedBrush = new SolidColorBrush(Colors.LightGray);
                            digitalGauge1.CharacterType = CharacterType.SegmentSeven;
                            digitalGauge1.SkewAngleX = -10;
                            digitalGauge1.SegmentWidth = 5;
                            digitalGauge1.SegmentSpacing = 3;
                            digitalGauge1.CharacterSpacing = 5;
                            digitalGauge1.Value = "8:50 AM";               
                            this.Content = digitalGauge1;
                        }
                    }
            }   
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterSeven.m_countPushes">
            <summary>
            Value indicating the count of transform pushes into the drawing context.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterSeven.m_listSegments">
            <summary>
            Collection of boolean values indicating what character segments should be 
            drawn with foreground brush.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterSeven.m_segment">
            <summary>
            Geometry used for drawing the segment.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterSeven.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.CharacterSeven.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.CharacterSeven.Segments">
            <summary>
            Gets or sets the collection of boolean values indicating what character 
            segments should be drawn with foreground brush.
            </summary>
            <value>
            Type: <see cref="T:System.Collections.Generic.List`1"/>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.DigitalGauge">
            <summary>
            Represents the DigitalGauge UI element.
            <remarks>The digital gauge is perfect for displaying output values that uses various character symbols.
            A digital gauge can have multiple characters, state indicators, labels and images.
            The look and feel of characters can be fully customized by setting the different properties of 
            DigitalGauge.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearGauge"/>
            <list type="table">
            <listheader>
            <term>Help Page</term>
            <description>Syntax</description>
            </listheader>
            <example>
            <list type="table">
            <listheader>
            <description>XAML Object Element Usage</description>
            </listheader>
            <example><code><Window xmlns:local="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF">
            <local:DigitalGauge Name="DigitalGauge1"/></Window></code></example>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <description>C#</description>
            </listheader>
            <example><code>public partial class DigitalGauge : Control</code></example>
            </list>
            <para/>
            </example>
            </list>
            <example>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/> in XAML.
            <code>
            <Window x:Class="GaugeControlTesting.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sync="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF" xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF" Title="Digital Gauge" Height="250" Width="300">    
             <Grid>    
               <sync:DigitalGauge Name="digitalGauge1" CharacterCount="5" CharacterHeight="50" CenterFrameFillColor="Gray" Foreground="Red" DimmedBrush="Transparent" SkewAngleX="-10" SegmentSpacing="1" CharacterSpacing="5" Value="Error" CharacterType="SegmentFourteen"/>
             </Grid>
            </Window>
            </code>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/> in C#.
            <code>
             using System;
             using System.Windows;
             using System.Windows.Controls;
             using Syncfusion.Windows.Gauge;
             using System.Windows.Media;
             namespace GaugeControlTesting
             {
               public partial class Window1 : Window
               {
                   public Window1()
                   {
                       InitializeComponent();
                       this.digitalGauge1.CharacterCount = 5;
                       this.digitalGauge1.CharacterHeight = 50;
                       this.digitalGauge1.CenterFrameFillColor = Colors.Gray;
                       this.digitalGauge1.Foreground = new SolidColorBrush( Colors.Red );
                       this.digitalGauge1.DimmedBrush = new SolidColorBrush( Colors.Transparent );
                       this.digitalGauge1.SkewAngleX = -10;
                       this.digitalGauge1.SegmentSpacing = 1;
                       this.digitalGauge1.CharacterSpacing = 5;
                       this.digitalGauge1.Value = "Error";
                       this.digitalGauge1.CharacterType = CharacterType.SegmentFourteen;
                   }
               }
             }
            </code>
            </example>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.m_characterDictionary">
            <summary>
            Dictionary that contains character definitions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.m_characters">
            <summary>
            Collection of character elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.CharacterCountProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterCount"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.CharacterHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.CharacterSpacingProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterSpacing"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.CharacterTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterType"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.DimmedBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.DimmedBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.FrameTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.FrameType"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.SegmentSpacingProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentSpacing"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.SegmentWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleXProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleX"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleYProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleY"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGauge.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.Value"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnApplyTemplate">
            <summary>
            Builds the current template's visual tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.RefreshAdornerLayer">
            <summary>
            Refreshes the Adorner layer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.AddCharacters">
            <summary>
            Adds characters to digital gauge if needed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.DigitalGaugeLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when control is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.InitializeDictionaryList">
            <summary>
            Initializes character definitions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterCountChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises CharacterCountChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharacterCountChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharacterHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises CharacterHeightChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharacterSpacingChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterSpacingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises CharacterSpacingChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises CharacterTypeChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnCharacterTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCharacterTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnDimmedBrushChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises DimmedBrushChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnDimmedBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDimmedBrushChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnForegroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnForegroundChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnForegroundChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises ForegroundChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnFrameTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnFrameTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnFrameTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises FrameTypeChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSegmentSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSegmentSpacingChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSegmentSpacingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises SegmentSpacingChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSegmentWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises SegmentWidthChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSegmentWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSegmentWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSkewAngleXChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSkewAngleXChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSkewAngleXChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises SkewAngleXChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSkewAngleYChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnSkewAngleYChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnSkewAngleYChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises SkewAngleYChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises ValueChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.RefreshCharacterProperties">
            <summary>
            Refreshes character properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.RefreshCharacterSegments">
            <summary>
            Characters are set according to the <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.Value"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.ResetCharacterSegments">
            <summary>
            All character segements are dim.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGauge.OnBackgroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="F:System.Windows.Controls.Control.BackgroundProperty"/> of the gauge is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.Characters">
            <summary>
            Gets or sets the collection of character elements.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.CharacterCollection"/>
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.CharacterCountChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterCount"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.CharacterHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.CharacterSpacingChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterSpacing"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.CharacterTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.DimmedBrushChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.DimmedBrush"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.FrameTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.FrameType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.SegmentSpacingChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentSpacing"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.SegmentWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleXChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleX"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleYChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleY"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGauge.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.Value"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterCount">
            <summary>
            Gets or sets the count of characters.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Int32"/>
            Default value is 2.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterHeight">
            <summary>
            Gets or sets the height of characters.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 30.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterSpacing">
            <summary>
            Gets or sets the distance between characters.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 2.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterType">
            <summary>
            Gets or sets the value indicating whether character should 
            contain seven or fourteen segments. This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.DigitalGauge.CharacterType"/>
            Default value is CharacterType.SegmentSeven.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.DimmedBrush">
            <summary>
            Gets or sets the brush used for drawing of dim segments.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.FrameType">
            <summary>
            Gets or sets the frame style of Digital Gauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.DigitalGaugeFrameType"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentSpacing">
            <summary>
            Gets or sets the distance between character segments.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.5.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.SegmentWidth">
            <summary>
            Gets or sets the width of character segments.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 2.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleX">
            <summary>
            Gets or sets the angle to skew the characters along the x-axis.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.SkewAngleY">
            <summary>
            Gets or sets the angle to skew the characters along the y-axis.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGauge.Value">
            <summary>
            Gets or sets the value that digital gauge should display.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Object"/>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel">
            <summary>
            Represents layout panel for digital gauge child elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParent"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.CharacterPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when when parent CharacterSpacing or SegmentWidth properties are changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.DigitalGaugeLayoutPanelLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when control is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnGaugeParentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnGaugeParentChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnGaugeParentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParentChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnPanelHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnPanelHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPanelHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnPanelWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPanelWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.OnPanelWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParentChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParent"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidth"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.GaugeParent">
            <summary>
            Gets or sets the parent of the panel.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelHeight">
            <summary>
            Gets or sets the height of the panel.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.DigitalGaugeLayoutPanel.PanelWidth">
            <summary>
            Gets or sets the width of the panel.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.RadiusConverter">
            <summary>
            Given a radius, it returns the diameter.
            </summary>
            <remarks>
            Used in calculating the width and height of the Circular Gauge's border(i.e frames).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RadiusConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Radius into Diameter
            </summary>
            <param name="value">Value to be converted</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RadiusConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Empty converter.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>ConverBack is not possible, hence returns "null"</returns>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ThicknessConverter">
            <summary>
            Given a Thickness, it returns the Thickness's Left value.
            </summary>
            <remarks>
            Used in calculating the <see cref="P:Syncfusion.Windows.Gauge.HalfCircleBorder.BorderWidth"/> from Thickness.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Thickness to double value
            </summary>
            <param name="value">Value to be converted</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.ThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Empty converter.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>ConverBack is not possible, hence returns "null"</returns>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.BooleanToVisibilityConverter">
            <summary>
            Convertor class for converting Boolean value to Visibility property value
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method for performing the conversion
            </summary>
            <param name="value">converts this value object into bool type</param>
            <param name="targetType">passing target type</param>
            <param name="parameter">passing parameter object</param>
            <param name="culture">passing culture CultureInfo</param>
            <returns>Type : Visibility</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method for performing the conversion  in the reverse direction
            </summary>
            <param name="value">passing value object</param>
            <param name="targetType">passing target type</param>
            <param name="parameter">passing parameter object</param>
            <param name="culture">passing culture CultureInfo</param>
            <returns>Type : throw</returns>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeCustomLabel">
            <summary>
            Represents a customizable label child element. 
            </summary>
            <remarks>
            The Label can be placed anywhere within the Gauge using <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/>
            property.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.CircularCustomLabel"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.GaugeImage"/>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnLabelValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnLabelValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnLabelValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnTextAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTextAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnTextAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.SetScope(Syncfusion.Windows.Gauge.GaugeBase)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeCustomLabel.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontFamily">
            <summary>
            Gets or sets the font family for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontFamily"/> 
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontSize">
            <summary>
            Gets or sets the font size for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 10.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontWeight">
            <summary>
            Gets or sets the font weight for the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.FontWeight"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.LabelValue">
            <summary>
            Gets or sets the text of the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default value is string.empty.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeCustomLabel.TextAngle">
            <summary>
            Gets or sets the rotation angle applied to the label.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeImage">
            <summary>
            Represents an image visual element that can be placed in the Gauge.
            </summary>
            <remarks>
            To specify the source of the image use the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageSource"/> property.0The image
            can be rotated to a specific angle using the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.Angle"/> property.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImage.AngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.Angle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImage.ImageHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImage.ImageSourceProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Controls.Image"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImage.ImageWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImage.ResizeModeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ResizeMode"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeImage.AngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnImageHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeImage.ImageHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnImageSourceChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeImage.ImageSourceChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnImageWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnImageWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeImage.ImageWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnResizeModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.GaugeImage.ResizeModeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnResizeModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnResizeModeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.SetScope(Syncfusion.Windows.Gauge.GaugeBase)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.GaugeImage.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeImage.AngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.Angle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeImage.ImageHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeImage.ImageSourceChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageSource"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeImage.ImageWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.GaugeImage.ResizeModeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ResizeMode"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeImage.Angle">
            <summary>
            Gets or sets rotation angle of the image.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0d.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeImage.ImageHeight">
            <summary>
            Gets or sets the height of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeImage.ImageSource">
            <summary>
            Gets or sets the image source of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageSource"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeImage.ImageWidth">
            <summary>
            Gets or sets the width of the element.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.GaugeImage.ImageHeight"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.GaugeImage.ResizeMode">
            <summary>
            Gets or sets the resize mode of the image.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeImageResizeMode"/>
            Default value is GaugeImageResizeMode.None.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.StateIndicator">
            <summary>
            Represents the gauge visual element that has the ability to indicate the state of the Gauge, 
            by turning itself "on" when the pointer reaches a stated range and vice versa. 
            </summary>
            <remarks>
            Inorder to make the StateIndicator work property, the <see cref="T:Syncfusion.Windows.Gauge.StateRange"/> values should 
            be properly initialized and the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveBackgroundBrush"/> should be set to a 
            different color other than the range's <see cref="P:Syncfusion.Windows.Gauge.GaugeElement.BackgroundBrush"/> color inorder
            to make the StateIndicator's state change visible.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.StateRange"/>
            <example>
            <code lang="XAML">
            <Window x:Class="WpfApplication5.Window1" Title="Window1" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <syncfusion:CircularGauge Name="circularGauge">
                    <syncfusion:CircularGauge.Scales>
                        <syncfusion:CircularScale Name="circularScale" Radius="100" Minimum="0" Maximum="100" MajorIntervalValue="10" MinorIntervalValue="2" ScaleBarSize="10" GapSweepAngle="310" StartAngle="110" BackgroundBrush="LightBlue">
                        </syncfusion:CircularScale>
                    </syncfusion:CircularGauge.Scales>
                    <syncfusion:CircularGauge.StateIndicators>
                        <syncfusion:StateIndicator ActiveBackgroundBrush="Red" IndicatorHeight="20" IndicatorWidth="20" FontSize="12" FontFamily="Verdana" Name="m_indicator1" IndicatorStyle="RoundedRectangularLED" Text="Off" ActiveText="On" Location="50,80">
                            <syncfusion:StateIndicator.StateRanges>
                                <syncfusion:StateRange StartValue="180" EndValue="240"/>
                            </syncfusion:StateIndicator.StateRanges>
                        </syncfusion:StateIndicator>
                    </syncfusion:CircularGauge.StateIndicators>
                </syncfusion:CircularGauge>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace WpfApplication5<para/>
            {
                public partial class Window1 : Window
                {
                    private CircularScale m_scale;
                    private StateIndicator m_indicator;
                    private CircularGauge m_gauge;
                    public Window1()
                    {
                        InitializeComponent();<para/>
                        m_scale = new CircularScale();
                        m_gauge = new CircularGauge();
                        m_scale.ShadowOffset = 1;
                        m_scale.Minimum = 0;
                        m_scale.Maximum = 100;
                        m_scale.MinorIntervalValue = 2;
                        m_scale.MajorIntervalValue = 10;
                        m_scale.StartAngle = 120;
                        m_scale.GapSweepAngle = 300;
                        m_scale.ScaleBarSize = 1.5;
                        m_scale.Radius = 116;
                        this.m_gauge.Scales.Add(m_scale);<para/>
                        m_indicator = new StateIndicator();
                        m_indicator.StateRanges.Add(new StateRange(10, 20));
                        m_indicator.StateRanges.Add(new StateRange(50, 60));
                        m_indicator.IndicatorStyle = IndicatorStyle.RoundedRectangularLED;
                        m_indicator.BackgroundBrush = new RadialGradientBrush(Colors.White,Colors.DarkGreen);
                        m_indicator.ActiveBackgroundBrush = new RadialGradientBrush(Colors.White, Colors.Red);
                        m_indicator.IndicatorWidth = 20;
                        m_indicator.IndicatorHeight = 20;
                        m_indicator.Location = new Point(50, 80);
                        m_gauge.StateIndicators.Add(m_indicator);
                        this.Content = m_gauge;<para/>
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.m_rect">
            <summary>
            Rect object used to draw the state indicator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.gaugeReference">
            <summary>
            Stores the gauge's reference
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.m_stateRanges">
            <summary>
            Collection of state ranges used to turn on/off the state indicator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.m_startsizeRatio">
            <summary>
            The ratio between the StateIndicator size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.m_endsizeRatio">
            <summary>
            The ratio between the StateIndicator size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.ActiveBackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveBackgroundBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.ActiveBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveBorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.ActiveTextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveText"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.AngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Angle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.IndicatorHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.IndicatorWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.TextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Text"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateIndicator.IndicatorCustomGeometryProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.Windows.Gauge.StateIndicator.IndicatorCustomGeometryProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.StateIndicator"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.StateIndicator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.GetIsStateActive">
            <summary>
            Gets the value indicating whether the state indicator is turned on.
            </summary>
            <returns>The value indicating whether the state indicator is turned on.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.GetActiveStateColor">
            <summary>
             This method gets the Activation state Colors of the StateIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnActiveTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnActiveTextChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnActiveTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.ActiveTextChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.AngleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnIndicatorStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIndicatorStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnIndicatorStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnStateIndicatorHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStateIndicatorHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnStateIndicatorHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.StateIndicatorHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnStateIndicatorWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStateIndicatorWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnStateIndicatorWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.StateIndicatorWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.TextChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTextChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateIndicator.ValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnIndicatorCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIndicatorCustomGeometryChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnIndicatorCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OnIndicatorCustomGeometryChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.SetScope(Syncfusion.Windows.Gauge.GaugeBase)">
            <summary>
            Sets the scope to Gauge's scope to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateIndicator.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire collection is refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.StateRanges">
            <summary>
            Gets the Collection of state ranges used to turn on/off the state indicator.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.StateRangeCollection"/>
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.ActiveTextChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveText"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.AngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Angle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.StateIndicatorHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.StateIndicatorWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.TextChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Text"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.Value"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateIndicator.IndicatorCustomGeometryChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveBackgroundBrush">
            <summary>
            Gets or sets the background of the state indicator
            when it is turned on. This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveBorderBrush">
            <summary>
            Gets or sets the border brush of the state indicator
            when it is turned on. This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveText">
            <summary>
            Gets or sets the text that is displayed in <see cref="F:Syncfusion.Windows.Gauge.IndicatorStyle.Text"/>
            mode when the state indicator is turned on.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default value is string.empty.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateIndicator.Text"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.Angle">
            <summary>
            Gets or sets the rotation angle of the state indicator.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.FontFamily">
            <summary>
            Gets or sets the font family for the text 
            that is displayed in <see cref="F:Syncfusion.Windows.Gauge.IndicatorStyle.Text"/> mode.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.FontFamily"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.FontSize">
            <summary>
            Gets or sets the font size for the text 
            that is displayed in <see cref="F:Syncfusion.Windows.Gauge.IndicatorStyle.Text"/> mode.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 12.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorHeight">
            <summary>
            Gets or sets the height of the state indicator.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyle">
            <summary>
            Gets or sets the indicator style value.
            Specifies a different look for the state indicator.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorStyle"/>
            Default value is IndicatorStyle.CircularLED.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorWidth">
            <summary>
            Gets or sets the width of the state indicator.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.Text">
            <summary>
            Gets or sets the text that is displayed in <see cref="F:Syncfusion.Windows.Gauge.IndicatorStyle.Text"/>
            mode when the state indicator is turned off.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default value is string.empty.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveText"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.Value">
            <summary>
            Gets or sets the value of the state indicator. If it falls 
            within one of the state ranges the state indicator turns on.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.IndicatorCustomGeometry">
            <summary>
            Gets or sets a custom geometry for the State Indicator.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Geometry"/>
            Default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.startSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of StateIndicator's Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateIndicator.endSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of StateIndicator's Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.StateRange">
            <summary>
            Represents state range object that helps specifying the range in which the indicator
            should be active.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Gauge.StateRange.StartValue"/> and <see cref="P:Syncfusion.Windows.Gauge.StateRange.EndValue"/> should be properly initialized
            inorder to change the state of the <see cref="T:Syncfusion.Windows.Gauge.StateIndicator"/>
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.StateIndicator"/>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateRange.EndValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateRange.EndValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateRange.StartValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateRange.StartValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.StateRange.RangeColorProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.StateRange.RangeColor"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.StateRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.StateRange"/> class.
            </summary>
            <param name="startValue">Start range value.</param>
            <param name="endValue">End range value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.#ctor(System.Double,System.Double,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.StateRange"/> class.
            </summary>
            <param name="startValue">Start range value.</param>
            <param name="endValue">End range value.</param>
            <param name="rangecolor">Range Color value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnEndValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateRange.EndValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnEndValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEndValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnStartValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateRange.StartValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnStartValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnStartValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnRangeColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.StateRange.RangeColorChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnRangeColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRangeColorChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.SetScope(Syncfusion.Windows.Gauge.GaugeBase)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during collection changed.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.GaugeBase"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.StateRange.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during collection changed.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateRange.EndValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateRange.EndValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateRange.StartValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateRange.StartValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.StateRange.RangeColorChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.StateRange.RangeColor"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateRange.EndValue">
            <summary>
            Gets or sets the end range value
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateRange.StartValue"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateRange.StartValue">
            <summary>
            Gets or sets the start range value
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateRange.EndValue"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.StateRange.RangeColor">
            <summary>
            Gets or sets the range color value
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Brush"/>
            Default value is Red.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateRange.EndValue"/>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeFrameType">
            <summary>
            Specifies the frame types used for drawing Circular Gauge control.
            </summary>  
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.FullCircle">
            <summary>
            Circular gauge with default template will be displayed as a full circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.HalfCircle">
            <summary>
            Circular gauge with default template will be displayed as a half circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.CircularWithDarkOuterFrames">
            <summary>
            Circular gauge with dark first and second frames.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.CircularWithInnerTopGradient">
            <summary>
            Circular gauge frame with inner top gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.CircularWithInnerLeftGradient">
            <summary>
            Circular gauge frame with inner left gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.CircularCenterGradient">
            <summary>
            Circular gauge with center gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.CounterclockwiseHalfCircle">
            <summary>
            Counter clockwise half circular gauge 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.LeftHalfCircle">
            <summary>
            Left side half circle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeFrameType.RightHalfCircle">
            <summary>
            Right side Half circle
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearGaugeFrameType">
            <summary>
            Specifies the frame types used for drawing Linear Gauge control.
            </summary>  
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGaugeFrameType.Rectangle">
            <summary>
            Linear gauge with default template will be displayed as a Rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGaugeFrameType.BoltedRectangle">
            <summary>
            Linear gauge with Bolted rectangle frame type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGaugeFrameType.CroppedRectangle">
            <summary>
            Linear gauge with Cropped rectangle frame type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGaugeFrameType.RoundedRectangleWithInnerGradient">
            <summary>
            Linear gauge frame with inner rounded rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.DigitalGaugeFrameType">
            <summary>
            Specifies the frame types used for drawing digital gauge control.
            </summary>  
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeFrameType.Rectangle">
            <summary>
            Digital gauge with default template will be displayed as a Rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeFrameType.BoltedRectangle">
            <summary>
            Digital gauge with Bolted rectangle frame style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeFrameType.CroppedRectangle">
            <summary>
            Digital gauge with Cropped rectangle frame style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.DigitalGaugeFrameType.RoundedRectangleWithInnerGradient">
            <summary>
            Digital gauge frame with inner gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.PointerCapType">
            <summary>
            Specifies different pointer cap shapes.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCapType.Default">
            <summary>
            Default cap type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerCapType.Custom">
            <summary>
            Custom cap type. Geometry can be applied through PointerCapCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ScalePlacement">
            <summary>
            Specifies the placement of visual element relative to the scale.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScalePlacement.Inside">
            <summary>
            Element is placed inside the scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScalePlacement.Outside">
            <summary>
            Element is placed outside the scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScalePlacement.Cross">
            <summary>
            Element is placed over the scale.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.ScaleDirection">
            <summary>
            Specifies the direction of the scale.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleDirection.Clockwise">
            <summary>
            Element is placed inside the scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.ScaleDirection.CounterClockwise">
            <summary>
            Element is placed outside the scale.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.PointerNeedleType">
            <summary>
            Specifies Pointer types.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerNeedleType.Needle">
            <summary>
            Pointer gets displayed as a needle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerNeedleType.Marker">
            <summary>
            Pointer gets displayed as a marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.PointerNeedleType.Bar">
            <summary>
            Pointer gets displayed as a bar.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.TickStyle">
            <summary>
            Specifies Tick types.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickStyle.MajorTick">
            <summary>
            Ticks denote major interval.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickStyle.MinorTick">
            <summary>
            Ticks denote minor interval.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.TickShape">
            <summary>
            Specifies the shape of the Tick.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickShape.Rectangle">
            <summary>
            Tick gets displayed in rectangular form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickShape.RoundedRectangle">
            <summary>
            Tick gets displayed in rectangular form with rounded corners.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickShape.Ellipse">
            <summary>
            Tick gets displayed in elliptical form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.TickShape.Triangle">
            <summary>
            Tick gets displayed in triangular form.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.IndicatorStyle">
            <summary>
            Specifies the shape of the Indicator.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.IndicatorStyle.RectangularLED">
            <summary>
            Rectangle shaped Indicator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.IndicatorStyle.CircularLED">
            <summary>
            Circle shaped Indicator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.IndicatorStyle.RoundedRectangularLED">
            <summary>
            RoundedRectangle shaped Indicator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.IndicatorStyle.Text">
            <summary>
            Indicator is displayed as a text
            </summary>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateIndicator.Text"/>
            <seealso cref="P:Syncfusion.Windows.Gauge.StateIndicator.ActiveText"/>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.IndicatorStyle.Custom">
            <summary>
            Custom Geometry can be applied through IndicatorCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeImageResizeMode">
            <summary>
            Specifies the resize modes of images.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImageResizeMode.None">
            <summary>
            Image size is unaltered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeImageResizeMode.Stretch">
            <summary>
            Image resizes to specified width and height.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.MarkerStyle">
            <summary>
            Specifies different marker styles.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Rectangle">
            <summary>
            Marker gets displayed in rectangular form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Triangle">
            <summary>
            Marker gets displayed in triangular form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Ellipse">
            <summary>
            Marker gets displayed in elliptical form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Diamond">
            <summary>
            Marker gets displayed in diamond form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Trapezoid">
            <summary>
            Marker gets displayed in trapezoidal form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Pentagon">
            <summary>
            Marker gets displayed in pentagonal form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.MarkerStyle.Custom">
            <summary>
            Custom Geometry can be applied through MarkerCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.BarStyle">
            <summary>
            Specifies different bar pointer styles.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.BarStyle.Thermometer">
            <summary>
            Bar pointer with thermo meter style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.BarStyle.Rectangle">
            <summary>
            Bar pointer with Rectangle style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.BarStyle.Custom">
            <summary>
            Custom Geometry can be applied through BarCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.NeedleStyle">
            <summary>
            Specifies different needle styles.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Gauge.NeedleStyle.Triangle">
            <summary>
            Needle gets displayed in triangular form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.NeedleStyle.Rectangle">
            <summary>
            Needle gets displayed in rectangular form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.NeedleStyle.Trapezoid">
            <summary>
            Needle gets displayed in trapezoidal form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.NeedleStyle.Arrow">
            <summary>
            Needle gets displayed in the shape of an arrow.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.NeedleStyle.Custom">
            <summary>
            Custom Geometry can be applied through NeedleCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.GaugeOrientation">
            <summary>
            Specifies the orientation of the Gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeOrientation.Horizontal">
            <summary>
            Horizontal gauge orientation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.GaugeOrientation.Vertical">
            <summary>
            Vertical gauge orientation.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.CharacterType">
            <summary>
            Specifies whether character should contain seven or fourteen segments.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterType.SegmentSeven">
            <summary>
            Character is displayed with seven segments. Used for displaying numeric characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.CharacterType.SegmentFourteen">
            <summary>
            Character is displayed with fourteen segments. Used for displaying alpha-numeric characters.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearScaleStyle">
            <summary>
            Specify Linear scale style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleStyle.Rectangle">
            <summary>
            Rectangle shaped Linear Gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleStyle.RoundedRectangle">
            <summary>
            Rounded rectangle shaped Linear Gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleStyle.Thermometer">
            <summary>
            Linear scale with thermo meter style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleStyle.Custom">
            <summary>
            Custom Geometry can be applied through ScaleCustomGeometry property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.UnitPosition">
            <summary>
            Specifies the Position of Units in RollingGauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.UnitPosition.Start">
            <summary>
            Unit will appear at the starting of the RollingGauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.UnitPosition.End">
            <summary>
            Unit will appear at the end of the RollingGauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.Direction">
            <summary>
            Specifies the Rolling Direction of RollingGauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.Direction.AnitClockwise">
            <summary>
            Segments Rotate in AntiClockwiseDirection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.Direction.Clockwise">
            <summary>
            Segments Rotate in Clockwise Direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearBarPointer">
            <summary>
            Represents the linear bar pointer visual element, which starts from the scale's minimum and goes up to
            the current value to be pointed out by the pointer.
            </summary>
            <remarks>
            The LinearBarPointer is animated using <see cref="T:System.Windows.Media.Animation.DoubleAnimation"/>. Both LinearBarPointer and 
            <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/> can be used hand-in-hand or independently, it depends on one's
            personal preference.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearBarPointerSample.Window1" Title="LinearBarPointerSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Pointers>
                                    <syncfusion:LinearBarPointer Name="barpointer" BackgroundBrush="Red" BorderBrush="Black" PointerWidth="5" Value="45"/>
                                </syncfusion:LinearScale.Pointers>
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearBarPointerSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;            
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);
                            LinearBarPointer pointer = new LinearBarPointer();
                            pointer.BackgroundBrush = Brushes.Red;
                            pointer.BorderBrush = new SolidColorBrush(Colors.Red);
                            pointer.PointerWidth = 8;
                            pointer.Value = 45;
                            scale.Pointers.Add(pointer);
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearPointer">
            <summary>
            Represents the abstract base class for <see cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/> and <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearPointerSample.Window1" Title="LinearPointerSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Pointers>
                                    <syncfusion:LinearBarPointer Name="barpointer" BackgroundBrush="Red" BorderBrush="Black" PointerWidth="5" Value="45"/>
                                </syncfusion:LinearScale.Pointers>
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearPointerSample<para/>
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;<para/>
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>
                            LinearBarPointer pointer = new LinearBarPointer();
                            pointer.BackgroundBrush = Brushes.Red;
                            pointer.BorderBrush = new SolidColorBrush(Colors.Red);
                            pointer.PointerWidth = 8;
                            pointer.Value = 45;
                            scale.Pointers.Add(pointer);<para/>
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.m_valueArgs">
            <summary>
            Event arguments used to fire the ValueChanged event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.m_sizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.PointerWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.PointerWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.PositionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Position"/> dependency property.<para/>
            It stores the position of the pointer relative to ScaleBarlength.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.AnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.AnimationDuration"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteractionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteraction"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.IncrementKeyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.IncrementKey"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearPointer.DecrementKeyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.DecrementKey"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearPointer"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearPointer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.CoercePosition(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Position"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.CoercePosition(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Position"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.LinearPointer"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.CoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Value"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.LinearPointer"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.CoerceValue(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Value"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnPointerWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.PointerWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnPointerWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnPositionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.PositionChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPositionChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnEnablePointerInteractionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteractionChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnIncrementKeyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.IncrementKeyChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnDecrementKeyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.DecrementKeyChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.ValueChanged"/> event.<para/>
            Animation to the pointer is done here.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnEnablePointerInteractionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnEnablePointerInteractionChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnIncrementKeyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIncrementKeyChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnDecrementKeyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnDecrementKeyChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.PositionAnimationCompleted(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.ValueChanged"/> event.
            </summary>
            <param name="sender">The source of this event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.RefreshPointerPosition">
            <summary>
            Updates the position of the pointer.
            </summary>
            <remarks>Checks whether the pointer is the visual child of LinearScale and 
            transforms the pointer to the appropriate location from the center of the gauge.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnAnimationDurationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerWidthChanged method of the instance, notifies of the depencency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearPointer.OnAnimationDurationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearPointer.AnimationDurationChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.PointerWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.PointerWidth"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.PositionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Position"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.Value"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.AnimationDurationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.AnimationDuration"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteractionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteraction"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.IncrementKeyChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.IncrementKey"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearPointer.DecrementKeyChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearPointer.DecrementKey"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.PointerWidth">
            <summary>
            Gets or sets the width of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.Position">
            <summary>
            Gets or sets the pointer's position relative to the ScaleBarLength.<para/>
            This is an "internal" dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.Value">
            <summary>
            Gets or sets the value to be indicated by the pointer.<para/>
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.AnimationDuration">
            <summary>
            Gets or sets the animation duration of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is Double.NaN.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.EnablePointerInteraction">
            <summary>
            Gets or sets whether the pointer interactivity of the pointer is enabled or not.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default value is true.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.IncrementKey">
            <summary>
            Gets or sets the Increment key for the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Input.Key"/>
            Default value is Up key.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.DecrementKey">
            <summary>
            Gets or sets the Decrement key for the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Input.Key"/>
            Default value is Down key.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearPointer.SizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearBarPointer.pointerPath">
            <summary>
            The geometry used to draw the pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometryProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometry"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyleProperty">
            <summary>
            Identifies the <see cref="T:Syncfusion.Windows.Gauge.MarkerStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
            <remarks>Draws the rectangular bar pointer</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.RefreshPointerPosition">
            <summary>
            Updates the position of the pointer by transforming it to the correct position.
            The pointer is created to the appropriate height <para/>and width at the center point of the
            Gauge and then transformed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.GetBarPath">
            <summary>
            Gets the geometry to draw the bar pointer.
            </summary>
            <returns>The geometry object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.DisableMouseEvents(Syncfusion.Windows.Gauge.LinearBarPointer)">
            <summary>
            Method to diable the MouseMove events
            </summary>
            <param name="path">path to which mouse events are added</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.EnableMouseEvents(Syncfusion.Windows.Gauge.LinearBarPointer)">
            <summary>
            Method to enable Mousemove events.
            </summary>
            <param name="path">path to which mouse events are removed</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnPointerWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when <see cref="F:Syncfusion.Windows.Gauge.LinearPointer.PointerWidthProperty"/> is changed.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnBarCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometryChanged"/> event
            </summary>
            <param name="e">Contains data related to the event</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnBarCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBarCustomGeometryChanged method of the instance, notifies of the 
            dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnBarStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnBarStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBarStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.LostFocus"/> routed event by
            using the event data that is provided. 
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains
            event data. This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus"/>
            event reaches this element in its route.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.LinearPointer_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the KeyDown event when the Key is pressed during the pointer is in focus.
            </summary>
            <param name="sender">LinearPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.LinearBarPointer_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the MouseMove event when the mouse cursor is moved on the pointer.
            </summary>
            <param name="sender">LinearBarPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.LinearBarPointer_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the MouseLeftButtonUp event when the mouse Left button is up on the pointer.
            </summary>
            <param name="sender">LinearBarPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.LinearBarPointer_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the  MouseLeftButtonDown event when the mouse Left button is down on the pointer.
            </summary>
            <param name="sender">LinearBarPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.GetValueByPosition(System.Double)">
            <summary>
            Gets the value with respect to the given position. 
            This method is invoked during pointer interaction.
            </summary>
            <param name="pos">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearBarPointer.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometryChanged">
            <summary>
            Event that will raise when <see cref="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarCustomGeometry">
            <summary>
            Gets or sets the custom geometry value for Bar pointer.
            </summary>
            <value>
            Type : <see cref="T:System.Windows.Media.Geometry"/>
            Default Value is Null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyle">
            <summary>
            Gets or sets the different shapes for the bar pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.LinearBarPointer.BarStyle"/>
            Default value is BarStyle.Rectangle.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearGauge">
            <summary>
            Represents the LinearGauge UI element.
            </summary>
            <remarks>The Linear Gauge is perfect for showing input values graphically along a linear scale.
            A linear gauge can have multiple scales, pointers, ranges, state indicators, labels and images.
            It has a bounded rectangle around it. The top-left corner of the rectangle has coordinates of (0, 0) 
            and the bottom-right corner has coordinates of (100, 100) and every gauge element is drawn
            inside the bounded rectangle according to the <see cref="P:Syncfusion.Windows.Gauge.LocalizableGaugeElement.Location"/> property. 
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/>
            <list type="table">
            <listheader>
            <term>Help Page</term>
            <description>Syntax</description>
            </listheader>
            <example>
            <list type="table">
            <listheader>
            <description>XAML Object Element Usage</description>
            </listheader>
            <example>
            <code>
            <Window xmlns:local="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF">
            <local:LinearGauge Name="LinearGauge1"/>
            </Window>
            </code>
            </example>
            </list>
            <para/>
            <list type="table">
            <listheader>
            <description>C#</description>
            </listheader>
            <example><code>public partial class LinearGauge : Control</code></example>
            </list>
            <para/>
            </example>
            </list>
            <example>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> in XAML.
            <code>
               <Window x:Class="GaugeControlTesting.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sync="clr-namespace:Syncfusion.Windows.Gauge;assembly=Syncfusion.Gauge.WPF" xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF" Title="Linear Gauge" Height="366" Width="118">    
             <Grid>    
               <sync:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
               <sync:LinearGauge.Scales>        
                   <sync:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="10" ScaleBarLength="260">
                       <sync:LinearScale.Ticks>            
                       <sync:LinearLabelTick FontSize="10" TickStyle="MajorTick" BackgroundBrush="Red" TickPlacement="Inside" DistanceFromScale="5"/>            
                       <sync:LinearMarkTick TickHeight="9" TickShape="Rectangle" TickStyle="MajorTick" TickWidth="4" BackgroundBrush="Pink"/>            
                       <sync:LinearMarkTick TickHeight="4" TickWidth="1" TickStyle="MinorTick" BackgroundBrush="Aqua"/>            
                   </sync:LinearScale.Ticks>
                   <sync:LinearScale.Pointers>            
                       <sync:LinearBarPointer BackgroundBrush="Blue" BorderBrush="Red" PointerWidth="5" Value="50"/>            
                   </sync:LinearScale.Pointers>
                   <sync:LinearScale.Ranges>            
                       <sync:LinearRange StartValue="70" EndValue="100" StartWidth="0" EndWidth="10" RangePosition="Inside" DistanceFromScale="2" BackgroundBrush="OrangeRed"/>            
                   </sync:LinearScale.Ranges>
                 </sync:LinearScale>        
               </sync:LinearGauge.Scales>    
             </sync:LinearGauge>    
             </Grid>
            </Window>
            </code>
            <para/>The following example shows how to create a <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> in C#.
            <code>
             using System;
             using System.Windows;
             using System.Windows.Controls;
             using Syncfusion.Windows.Gauge;
             using System.Windows.Media;<para/>
             namespace GaugeControlTesting
             {
               public partial class Window1 : Window
               {
                   public Window1()
                   {
                       InitializeComponent();<para/>
                       this.linearGauge1.CenterFrameFillColor = Colors.Brown;
                       LinearScale scale = new LinearScale();
                       scale.Minimum = 0;
                       scale.Maximum = 100;
                       scale.MinorIntervalValue = 2;
                       scale.MajorIntervalValue = 10;
                       scale.ScaleBarSize = 10;
                       scale.ScaleBarLength = 260;
                       linearGauge1.Scales.Add( scale );<para/>
                       LinearLabelTick labelTick = new LinearLabelTick();
                       labelTick.FontSize = 10;
                       labelTick.TickStyle = TickStyle.MajorTick;
                       labelTick.BackgroundBrush = new SolidColorBrush( Colors.Red );
                       labelTick.TickPlacement = ScalePlacement.Inside;
                       labelTick.DistanceFromScale = 5;
                       scale.Ticks.Add( labelTick );
                       LinearMarkTick markTick1 = new LinearMarkTick();
                       markTick1.TickHeight = 9;
                       markTick1.TickShape = TickShape.Rectangle;
                       markTick1.TickStyle = TickStyle.MajorTick;
                       markTick1.TickWidth = 4;
                       markTick1.BackgroundBrush = new SolidColorBrush( Colors.Pink );
                       scale.Ticks.Add( markTick1 );
                       LinearMarkTick markTick2 = new LinearMarkTick();
                       markTick2.TickHeight = 4;
                       markTick2.TickWidth = 1;
                       markTick2.TickStyle = TickStyle.MinorTick;
                       markTick2.BackgroundBrush = new SolidColorBrush( Colors.White );
                       scale.Ticks.Add( markTick2 );<para/>
                       LinearBarPointer pointer = new LinearBarPointer();
                       pointer.BackgroundBrush = new SolidColorBrush( Colors.Blue );
                       pointer.BorderBrush = new SolidColorBrush( Colors.Red );
                       pointer.PointerWidth = 5;
                       pointer.Value = 50;
                       scale.Pointers.Add( pointer );
                       LinearRange range = new LinearRange();<para/>
                       range.StartValue = 70;
                       range.EndValue = 100;
                       range.StartWidth = 0;
                       range.EndWidth = 10;
                       range.RangePosition = ScalePlacement.Inside;
                       range.DistanceFromScale = 2;
                       range.BackgroundBrush = new SolidColorBrush( Colors.OrangeRed );
                   }
               }
             }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGauge.FrameTypeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.FrameType"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGauge.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGauge.AutoSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearGauge.RotationAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.RotationAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire collection is refreshed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnApplyTemplate">
            <summary>
            Called when the templates are being applied.
            </summary>
            <remarks>All the borders,Location and Orientation were set. If the PART_ContainerBorder is
            not set, then the Adorned Element(the element underneath the adorner layer)<para/>
            is LinearGauge. If the PART_ContainerBorder is set, then the Adorned Element is<para/>
            the PART_ContainerBorder</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged"/> event, 
            using the specified information as part of the eventual event data. 
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.RefreshAdornerLayer">
            <summary>
            Refreshes the adorner layer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.UpdateChildrenLocation">
            <summary>
            Updates the location of children elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.AdjustOrientationSettings">
            <summary>
            Set all needed settings according to the orientation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.LinearGaugeLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the control is ready for presentation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnFrameTypeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises FrameTypeChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnFrameTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnFrameTypeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OrientationChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnOrientationChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnAutoSizeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OrientationChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnAutoSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnOrientationChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnRotationAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnRotationAngleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnRotationAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises RotationAngleChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.ScaleBarLengthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLength"/> property of a scale is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearGauge.OnBackgroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="F:System.Windows.Controls.Control.BackgroundProperty"/> of the gauge is changed.
            </summary>
            <param name="sender">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearGauge.Scales">
            <summary>
            Gets or sets the collection of linear scales.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ScaleCollection"/>
            </value>     
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearGauge.FrameTypeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.FrameType"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearGauge.OrientationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.Orientation"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearGauge.AutoSizeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.AutoSize"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearGauge.RotationAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearGauge.RotationAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearGauge.FrameType">
            <summary>
            Gets or sets the Linear Gauge frame style.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeFrameType"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearGauge.Orientation">
            <summary>
            Gets or sets the orientation of the linear gauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeOrientation"/>
            Default value is GaugeOrientation.Horizontal.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearGauge.AutoSize">
            <summary>
            Gets or sets the orientation of the linear gauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeOrientation"/>
            Default value is GaugeOrientation.Horizontal.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearGauge.RotationAngle">
            <summary>
            Gets or sets the angle for displaying the gauge.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearLabelTick">
            <summary>
            Represents the numeric Label ticks of the linear scale.
            </summary>
            <remarks>
            The LinearLabelTick can made to display Labels for either the <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MajorTick"/> or 
            <see cref="F:Syncfusion.Windows.Gauge.TickStyle.MinorTick"/>. The Ticks to which the labels are placed is set by using the 
            <see cref="P:Syncfusion.Windows.Gauge.TickBase.TickStyle"/> property.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearLabelTickSample.Window1" Title="LinearLabelTickSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Ticks>
                                    <syncfusion:LinearLabelTick FontSize="10" TickStyle="MajorTick" BackgroundBrush="White" TickPlacement="Inside" DistanceFromScale="5"/> 
                                </syncfusion:LinearScale.Ticks>
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearLabelTickSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>
                            LinearLabelTick labelTick = new LinearLabelTick();
                            labelTick.FontSize = 10;
                            labelTick.TickStyle = TickStyle.MajorTick;
                            labelTick.BackgroundBrush = new SolidColorBrush(Colors.GhostWhite);
                            labelTick.TickPlacement = ScalePlacement.Inside;
                            labelTick.DistanceFromScale = 5;
                            scale.Ticks.Add(labelTick);<para/>
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.m_sizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfoProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfo"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmicProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmic"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.LogBaseProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.LogBase"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabledProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormulaProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormula"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngle"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearLabelTick"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearLabelTick"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
            <remarks>The measuring is done by calculating the width and height of the scale's Maximum value's
            size, assuming Maximum label will always have the highest width and height</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
            <remarks>
            <list type="bullet">
                <listheader>The Local Variables Used</listheader>
                <item>
                    <term>ratio</term>
                    <description>stores the number of segments(relative to Maximum and Minimum values),
                    that can be formed,each of "valueInterval" length.
                    </description>
                </item>
                <item>
                    <term>interval</term>
                   <description>Stores the length of one such segment(relative to ScaleBarLength 
                    deducting YDistanceFromScale).
                    </description>
                </item>
            </list>
            <list type="bullet">
                <listheader>The Transforms Used</listheader>
                <item>The ticks arranged at the Center of the Gauge are first transformed, to the angle set.</item>
                <item>Calculate the appropriate position where the label should display itself.</item>
                <item>Draw the labels at that particular position</item>
            </list>
            <list type="bullet">
                <listheader>Logarithmic Details</listheader>
                <item>
                    <term>IsLogarithmic</term>
                    <description>Boolean value to denote whether the label displays values in Log or in Normal 
                    decimal form</description>
                </item>
                <item>
                    <term>LogBase</term>
                    <description>Double value which stores the base value for logarithmic display of labels</description>
                </item>
            </list>
            <list type="bullet">
                <listheader>NumberFormatInfo</listheader>
                <item>NumberDecimalDigits</item>
                <description>Number of decimal digits to be displayed for the label values</description>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.GetDecimalCountNumber(System.Double)">
            <summary>
            Returns the count of decimal digits from the double argument passed.<para/>
            Maximum count of decimal digits for decimal numbers is 3.
            </summary>
            <param name="value">Double number.</param>
            <returns>Count of decimal digits.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.GetLogDecimalCountNumber(System.Double)">
            <summary>
            Returns the count of decimal digits from the log argument passed.<para/> 
            </summary>
            <param name="value">Double number.</param>
            <returns>Count of decimal digits.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.GetTextLength(System.Windows.Media.FormattedText)">
            <summary>
            Gets the length of the text in pixels.
            </summary>
            <param name="formattedText">Text to get the length of.</param>
            <returns>Length of the text in pixels.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIncludeFirstValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValueChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIncludeFirstValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIncludeFirstValueChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnNumberFormatInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnNumberFormatInfoChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnNumberFormatInfoChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfoChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsLogarithmicChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsLogarithmicChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsLogarithmicChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmicChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnLogBaseChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnLogBaseChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnLogBaseChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.LogBaseChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsCalculateFormulaEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsCalculateFormulaEnabledChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsCalculateFormulaEnabled(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabledChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnCalculateFormulaChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCalculateFormulaChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnCalculateFormulaChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormulaChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsRelativeAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsRelativedChanged method of the instance, notifies of the dependency property value change.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnIsRelativeAngleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngleChanged"/> event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabledChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabled"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormulaChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormula"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmicChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmic"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.LogBaseChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.LogBase"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfoChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfo"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValue"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngle"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabled">
            <summary>
            Gets or sets a value indicating whether IsCalculateFormula value is true or false,
            so that label values calculated using a formula were displayed on the scale.This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsCalculateFormula is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormula"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormula">
            <summary>
            Gets or sets the Formula string that can be used to calculate the label values.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.String"/>
            Default CalculateFormula is string.Empty.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsCalculateFormulaEnabled"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmic">
            <summary>
            Gets or sets a value indicating whether IsLogarithmic value is true or false,
            so that log values can be displayed on the scale.This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsLogarithmic is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.LogBase"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.LogBase">
            <summary>
            Gets or sets the LogBase value that can be displayed in the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default LogBase is 10.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsLogarithmic"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.NumberFormatInfo">
            <summary>
            Gets or sets the Custom's NumberFormatInfo value
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Globalization.NumberFormatInfo"/>
            Default value is "null".
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontFamily">
            <summary>
            Gets or sets the font family for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontFamily"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontSize">
            <summary>
            Gets or sets the font size for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 10.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontWeight">
            <summary>
            Gets or sets the font weight for the labels.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.FontWeight"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.IncludeFirstValue">
            <summary>
            Gets or sets a value indicating whether to include first tick value.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.IsRelativeAngle">
            <summary>
            Gets or sets a value indicating whether the label's angle is relative to that of the 
            scale's angle
            </summary>
            <value>
            Type: <see cref="T:System.Boolean"/>
            Default IsRelativeAngle is "False".
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearLabelTick.CalculateFormula"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearLabelTick.SizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearMarkerPointer">
            <summary>
            Represents the pointer visual element which may assist the Bar pointer in denoting values.    
            </summary>
            <remarks>
            The LinearMarkerPointer and <see cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/> can be used hand-in-hand or
            independently to denote values on the Scale, it depends on one's personal preference.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearMarkerPointerSample.Window1" Title="LinearMarkerPointerSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Pointers>
                                    <syncfusion:LinearBarPointer Name="barpointer" BackgroundBrush="Red" BorderBrush="Black" PointerWidth="5" Value="45"/> 
                                    <syncfusion:LinearMarkerPointer Value="{Binding Value,ElementName=barpointer}" PointerLength="10" PointerWidth="10" PointerPlacement="Outside" MarkerStyle="Triangle" BackgroundBrush="Black"/>
                                </syncfusion:LinearScale.Pointers> 
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearMarkerPointerSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;<para/>
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>       
                            LinearBarPointer pointer = new LinearBarPointer();
                            pointer.BackgroundBrush = Brushes.Red;
                            pointer.BorderBrush = new SolidColorBrush(Colors.Red);
                            pointer.PointerWidth = 8;
                            pointer.Value = 45;
                            scale.Pointers.Add(pointer);<para/>
                            LinearMarkerPointer markpointer = new LinearMarkerPointer();
                            markpointer.BackgroundBrush = Brushes.Black;
                            markpointer.PointerLength = 10;
                            markpointer.PointerWidth = 10;
                            markpointer.MarkerStyle = MarkerStyle.Triangle;
                            markpointer.PointerPlacement = ScalePlacement.Outside;
                            Binding bind = new Binding("Value");                
                            bind.Source = pointer;
                            markpointer.SetBinding(LinearMarkerPointer.ValueProperty, bind);
                            scale.Pointers.Add(markpointer);<para/>
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.m_pointerPath">
            <summary>
            Stores the geometry used to draw the pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.m_lengthsizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLengthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacementProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacement"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometryProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometry"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/> class.
            Overrides meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
            <remarks>For Triangle-Inside placement, for Pentagon and for Trapezoid, we have
            to Rotate the geometry by 180 degree</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.LostFocus"/> routed event by
            using the event data that is provided.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains
            event data. This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus"/>
            event reaches this element in its route.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.RefreshPointerPosition">
            <summary>
            Updates the position of the pointer.
            </summary>
            <remarks>The pointer which is drawn in the Center by OnRender method is transformed
            to the appropriate location</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.CoercePointerLength(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value of the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength"/> property.
            </summary>
            <param name="d">The <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/> object.</param>
            <param name="value">The instance containing the event data.</param>
            <returns>
            The checked value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.CoercePointerLength(System.Object)">
            <summary>
            Fulfils the logic before setting the value of <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength"/> dependency property.
            </summary>
            <param name="value">The value that should be corrected.</param>
            <returns>The corrected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.GetMarkerPath">
            <summary>
            Gets the geometry to draw the marker pointer.
            </summary>
            <returns>The geometry object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.DisableMouseEvents(Syncfusion.Windows.Gauge.LinearMarkerPointer)">
            <summary>
            Method to diable the MouseMove events
            </summary>
            <param name="path">path to which mouse events are added</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.EnableMouseEvents(Syncfusion.Windows.Gauge.LinearMarkerPointer)">
            <summary>
            Method to enable Mousemove events.
            </summary>
            <param name="path">path to which mouse events are removed</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.LinearMarkerPointerLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the control is ready for presentation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnMarkerStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyleChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnMarkerStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMarkerStyleChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnPointerLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLengthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnPointerLengthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerLengthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnPointerPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPointerPlacementChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnPointerPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacementChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnMarkerCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometryChanged"/> event
            </summary>
            <param name="e">Contains data related to the event</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnMarkerCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnMarkerCustomGeometryChanged method of the instance, notifies of the 
            dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.LinearPointer_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the KeyDown event when the Key is pressed during the pointer is in focus.
            </summary>
            <param name="sender">LinearPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.LinearMarkerPointer_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the MouseMove event when the mouse cursor is moved on the pointer.
            </summary>
            <param name="sender">LinearMarkerPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.LinearMarkerPointer_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the MouseLeftButtonUp event when the mouse Left button is Up on the pointer.
            </summary>
            <param name="sender">LinearMarkerPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.LinearMarkerPointer_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the MouseLeftButtonDown event when the mouse Left button is down on the pointer.
            </summary>
            <param name="sender">LinearMarkerPointer</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.GetValueByPosition(System.Double)">
            <summary>
            Gets the corresponding value for Pointer position passed.
            </summary>
            <param name="pos">Pointer position.</param>
            <returns>Value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkerPointer.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLengthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacementChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacement"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometryChanged">
            <summary>
            Event that will raise when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyle">
            <summary>
            Gets or sets the different shapes for the marker pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerStyle"/>
            Default value is MarkerStyle.Rectangle.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerLength">
            <summary>
            Gets or sets the length of the pointer.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearPointer.PointerWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.PointerPlacement">
            <summary>
            Gets or sets the placement of the marker pointer
            relative to the scale. This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.ScalePlacement"/>
            Default value is ScalePlacement.Inside.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.MarkerCustomGeometry">
            <summary>
            Gets or sets the custom geometry value for Marker.
            </summary>
            <value>
            Type : <see cref="T:System.Windows.Media.Geometry"/>
            Default Value is Null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkerPointer.LengthSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearMarkTick">
            <summary>
            Represents the Major/Minor tick of the linear scale. The Major/Minor ticks are set by
            using the <see cref="T:Syncfusion.Windows.Gauge.TickStyle"/> property.
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearMarkTickSample.Window1" Title="LinearMarkTickSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Ticks>
                                    <syncfusion:LinearMarkTick TickHeight="9" TickShape="Rectangle" TickStyle="MajorTick" TickWidth="4" BackgroundBrush="Pink"/>
                                    <syncfusion:LinearMarkTick TickHeight="4" TickWidth="1" TickStyle="MinorTick" BackgroundBrush="Aqua"/>
                                </syncfusion:LinearScale.Ticks> 
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearMarkTickSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;<para/>
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>
                            LinearMarkTick markTick1 = new LinearMarkTick();
                            markTick1.TickHeight = 9;
                            markTick1.TickShape = TickShape.Rectangle;
                            markTick1.TickStyle = TickStyle.MajorTick;
                            markTick1.TickWidth = 4;
                            markTick1.BackgroundBrush = new SolidColorBrush(Colors.Pink);
                            scale.Ticks.Add(markTick1);
                            LinearMarkTick markTick2 = new LinearMarkTick();
                            markTick2.TickHeight = 4;
                            markTick2.TickWidth = 1;
                            markTick2.TickStyle = TickStyle.MinorTick;
                            markTick2.BackgroundBrush = new SolidColorBrush(Colors.White);
                            scale.Ticks.Add(markTick2);<para/>
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.m_rect">
            <summary>
            Rect object used to draw the tick.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.m_startsizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.m_endsizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.TickShapeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickShape"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearMarkTick"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearMarkTick"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="constraint">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
            <remarks>
            <list type="bullet">
                <listheader>The local variables used</listheader>
                <item>
                    <term>ratio</term>
                    <description>stores the number of segments(relative to Maximum and Minimum values),
                    that can be formed,each of "valueInterval" length.
                    </description>
                </item>
                <item>
                    <term>interval</term>
                   <description>Stores the length of one such segment(relative to ScaleBarLength 
                    deducting YDistanceFromScale.
                    </description>
                </item>
            </list>
            <list type="bullet">
                <listheader>The transforms used</listheader>
                <item>The ticks arranged at the Center of the Gauge are first transformed, to the angle set.</item>
                <item>Then the ticks are moved to the appropriate position from the center.</item>
                <item>The positioning of tick starts from the top of scale.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickShapeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickShapeChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickShapeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickShapeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnTickWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnTickWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearMarkTick.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickShapeChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickShape"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidth"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeight">
            <summary>
            Gets or sets the height of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickWidth">
            <summary>
            Gets or sets the width of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickHeight"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickShape">
            <summary>
            Gets or sets the shapes of the mark tick.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="P:Syncfusion.Windows.Gauge.LinearMarkTick.TickShape"/>
            Default value is TickShape.Rectangle.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkTick.startSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearMarkTick.endSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearRange">
            <summary>
            Represents the range visual element, which spans a range of consecutive values 
            represented by a visual.
            </summary>
            <remarks>
            The Range's <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/> should be specified before <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/>
            because of the constraint that the <see cref="P:Syncfusion.Windows.Gauge.RangeBase.StartValue"/> should not be greater
            than <see cref="P:Syncfusion.Windows.Gauge.RangeBase.EndValue"/>    
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearRangeSample.Window1" Title="LinearRangeSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                                <syncfusion:LinearScale.Ranges>
                                    <syncfusion:LinearRange StartValue="70" EndValue="100" StartWidth="0" EndWidth="10" RangePosition="Inside" DistanceFromScale="1" BackgroundBrush="OrangeRed"/>
                                </syncfusion:LinearScale.Ranges>
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearRangeSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;<para/>
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>
                            LinearRange range = new LinearRange();
                            range.StartValue = 70;
                            range.EndValue = 100;
                            range.StartWidth = 0;
                            range.EndWidth = 10;
                            range.RangePosition = ScalePlacement.Inside;
                            range.DistanceFromScale = 2;
                            range.BackgroundBrush = new SolidColorBrush(Colors.OrangeRed);
                            scale.Ranges.Add(range);<para/>
                            this.Content = linearGauge1;
                        }
                    }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearRange.m_rangePath">
            <summary>
            The geometry used to draw the range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearRange.m_startsizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearRange.m_endsizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearRange"/> class.
            Overrides the meta data for default template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.OnBindIndicatorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises StartValueChanged /> event.
            </summary>
            <param name="e">Property change details, such as old value and new
            value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.LinearRangeLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the control is ready for presentation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during initialization.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearRange.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during initialization.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearRange.startSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearRange.endSizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearScale">
            <summary>
            Represents the scale visual element.
            </summary>
            <remarks>
            The LinearScale is the <see cref="P:System.Windows.Media.Visual.VisualParent"/> for the various elements of the Gauge, such as
            <see cref="T:Syncfusion.Windows.Gauge.LinearLabelTick"/>, <see cref="T:Syncfusion.Windows.Gauge.LinearMarkTick"/>, <see cref="T:Syncfusion.Windows.Gauge.LinearRange"/>,
            <see cref="T:Syncfusion.Windows.Gauge.LinearBarPointer"/> and <see cref="T:Syncfusion.Windows.Gauge.LinearMarkerPointer"/>.
            </remarks>
            <example>
            <code lang="XAML">
            <Window x:Class="LinearScaleSample.Window1" Title="LinearScaleSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:LinearGauge CenterFrameFillColor="Brown" Name="linearGauge1">
                        <syncfusion:LinearGauge.Scales>
                            <syncfusion:LinearScale Name="LinearScale" Minimum="0" Maximum="100" MinorIntervalValue="2" MajorIntervalValue="10" ScaleBarSize="20" ScaleBarLength="260">
                            </syncfusion:LinearScale>
                        </syncfusion:LinearGauge.Scales>
                    </syncfusion:LinearGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace LinearScaleSample
            {
                    public partial class Window1 : Window
                    {
                        private LinearGauge linearGauge1;<para/>
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            linearGauge1 = new LinearGauge();
                            this.linearGauge1.CenterFrameFillColor = Colors.Brown;<para/>
                            LinearScale scale = new LinearScale();
                            scale.Minimum = 0;
                            scale.Maximum = 100;
                            scale.MinorIntervalValue = 2;
                            scale.MajorIntervalValue = 10;
                            scale.ScaleBarSize = 20;
                            scale.ScaleBarLength = 260;
                            linearGauge1.Scales.Add(scale);<para/>
                            this.Content = linearGauge1;
                        }
                    }
                }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_gaugeActualHeight">
            <summary>
            Store LinearGauge's Actual Height.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.gaugeReference">
            <summary>
            Stores the gauge's reference
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_gaugeActualWidth">
            <summary>
            Store LinearGauge's Actual Width.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_lengthRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_sizeRatio">
            <summary>
            The ratio between the scale size and gauge size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_pointerCapShadow">
            <summary>
            The pointer cap shadow.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_pointers">
            <summary>
            Collection of the linear pointers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_scalePath">
            <summary>
            The geomerty used to draw the scale.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.m_scaleWidth">
            <summary>
            Horizontal distance between the scale and gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScale.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.RadiusXProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScale.RadiusX"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.RadiusYProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScale.RadiusY"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLengthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLength"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.ScaleStyleProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.Windows.Gauge.LinearScale.ScaleStyleProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScale.ScaleCustomGeometryProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.Windows.Gauge.LinearScale.ScaleCustomGeometryProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.LinearScale"/> class.
            Overrides some dependency properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearScale"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>Linear Scale provides all of its child elements with rectangular space of their
            DesiredWidth and DesiredHeight,which starts exactly at the center of the LinearScale. 
            All of its children render themselves at the appropriate positions by using transforms.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.GetVisualChild(System.Int32)">
            <summary>
            Returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">he zero-based index of the requested child element in the collection.</param>
            <returns>The requested child element.</returns>
            <remarks>The arrangement is in such a way that Ranges are arranged first, then the Ticks(i.e above
            the Ranges) and then the Pointers(i.e above the Ticks and ranges) and hence the pointer are 
            always at the top</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Maximum"/> property is changed.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when <see cref="P:Syncfusion.Windows.Gauge.ScaleBase.Minimum"/> property is changed.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.GetPositionByPointerValue(System.Double)">
            <summary>
            Gets the position according to the value.
            </summary>
            <param name="value">Value whose position to be found</param>
            <remarks>
            <list type="bullet">
                <listheader>The local variables used</listheader>
                <item>
                    <term>ratio</term>
                    <description>stores the number of segments(relative to Maximum and Minimum values),
                    that can be formed,each of "value - Minimum" length.
                    </description>
                </item>
                <item>
                    <term>return</term>
                    <description>returns the length of one such segment(relative to ScaleBarLength),
                     since that is the actual position of the visual
                    </description>
                </item>
            </list>
            </remarks>
            <returns>
            Returns the actual position.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.LinearScaleLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the scale is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnOrientationChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OrientationChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleBarLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises ScaleBarLengthChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleBarLengthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnScaleBarLengthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnScaleStyle method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OnScaleStyleChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OnScaleDirectionChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleCustomGeometryChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnScaleStyle method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnScaleCustomGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises OnScaleCustomGeometryChanged event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.RefreshPointers">
            <summary>
            Refreshes pointers position according to the values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. 
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> property 
            is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.SetScope(Syncfusion.Windows.Gauge.LinearGauge)">
            <summary>
            Sets the scope to <see cref="T:Syncfusion.Windows.Gauge.CircularGauge"/>to facilitate Binding. 
            This method is invoked during collection changed.
            </summary>
            <param name="gauge">The <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> that contains the reference to the Gauge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.CalculateScope(System.Windows.DependencyObject)">
            <summary>
            Calculates the scope. 
            This method is invoked during collection changed.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.DependencyObject"/> which contains the element to set the scope for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScale.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when element is added, replaced or removed from the collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
            <remarks> Adds LabelTicks, MarkTicks, Pointers and Ranges as LinearScale's Visual Children</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.GaugeActualHeight">
            <summary>
            Gets or sets the actual Height of Linear Gauge.
            </summary>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScale.GaugeActualWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.GaugeActualWidth">
            <summary>
            Gets or sets the actual Width of Linear Gauge.
            </summary>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScale.GaugeActualHeight"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.LengthRatio">
            <summary>
            Gets or sets the ratio of ScaleBarLength to that of LinearGauge's Height.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.SizeRatio">
            <summary>
            Gets or sets the ratio of ScaleBarSize to that of LinearGauge's Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.Pointers">
            <summary>
            Gets or sets the collection of linear pointers.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.LinearPointersCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.ScaleWidth">
            <summary>
            Gets or sets the length between the scale size and gauge size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value>
            Type: <see cref="T:System.Int32"/>
            Returns the Visual Children count.
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScale.OrientationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScale.Orientation"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLengthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLength"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScale.ScaleStyleChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScale.ScaleStyle"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScale.ScaleCustomGeometryChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScale.ScaleCustomGeometry"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.Orientation">
            <summary>
            Gets or sets the orientation of the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.GaugeOrientation"/>
            Default value is GaugeOrientation.Horizontal.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.RadiusX">
            <summary>
            Gets or sets the corner radius(RadiusX) for Rounded Rectangle Scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0d.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScale.RadiusY"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.RadiusY">
            <summary>
            Gets or sets the corner radius(RadiusY) for Rounded Rectangle Scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0d.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScale.RadiusX"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.ScaleBarLength">
            <summary>
            Gets or sets the length of the scale.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            Default value is 0.
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.ScaleBase.ScaleBarSize"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.ScaleStyle">
            <summary>
            Gets or sets the linear scale style.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:Syncfusion.Windows.Gauge.LinearScaleStyle"/>
            Default value is Rectangle.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScale.ScaleCustomGeometry">
            <summary>
            Gets or sets a custom geometry for the Scale bar.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Windows.Media.Geometry"/>
            Default value is null.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel">
            <summary>
            Represents the layout panel for the Linear Gauge.
            </summary>
            <remarks>
            All the elements of the <see cref="T:Syncfusion.Windows.Gauge.LinearGauge"/> are arranged at the center of the Panel and
            then transformed to their respective positions.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeightProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidthProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements 
            and determines a size for the element.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the element.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>The children(both the LinearScale and StateIndicator) are arranged at the center
            of the Panel,with its(i.e children's) center coinciding with that of the Panel's center.They are then 
            transformed to their respective positions(ScaleBar stays at the center but the StateIndicator
            moves to the new position)all by themselves</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.OnPanelHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeightChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.OnPanelHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPanelHeightChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.OnPanelWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPanelWidthChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.OnPanelWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises <see cref="E:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidthChanged"/> event.
            </summary>
            <param name="e">
            Property change details, such as old value and new value.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeightChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeight"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidthChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidth"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeight">
            <summary>
            Gets or sets the height of the panel.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidth"/>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelWidth">
            <summary>
            Gets or sets the width of the panel.
            This is a dependency property.
            </summary>
            <value>
            Type: <see cref="T:System.Double"/>
            </value>
            <seealso cref="P:Syncfusion.Windows.Gauge.LinearScaleLayoutPanel.PanelHeight"/>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.RollingCharacter">
            <summary>
            Represents Segment of the Rolling Gauge
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="CharacterFourteenSample.Window1" Title="CharacterFourteenSample" Height="400"
            Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:RollingGauge SegmentBackground="Firebrick" SpaceBetWeenSegment="2" 
                                       Value="01" SegmentCount="2" Unit="KM" UnitPosition="End">
                        <syncfusion:RollingGauge.Segments>
                            <syncfusion:RollingCharacter CharacterIndex="0" Background="Gray" Value="1" Margin="2"/>
                        </syncfusion:RollingGauge.Segments> 
                    </syncfusion:RollingGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CharacterRollingGaugeSample
            {
                    public partial class Window1 : Window
                    {
                        private DigitalGauge digitalGauge1;
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            RollingGauge rollingGauge = new RollingGauge();
                            rollingGauge.SpaceBetWeenSegment = new Thickness(1);
                            rollingGauge.Value = "11";
                            rollingGauge.Unit = "KM";
                            rollingGauge.UnitPosition = UnitPosition.End;
                            RollingCharacter character = new RollingCharacter();
                            character.Background = Brushes.Gray;
                            character.BorderThickness = new Thickness(1);
                            character.Margin = new Thickness(1);
                            character.BorderBrush = Brushes.Black;
                            character.Value = '0';
                            character.CharacterIndex = 0;
                            rollingGauge.Segments.Add(character);
                            this.Content = rollingGauge;
                        }
                    }
            }   
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingCharacter.GaugeParent">
            <summary>
            Parent to Rolling Character
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingCharacter.CharacterIndexProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingCharacter.CharacterIndex"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingCharacter.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingCharacter.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingCharacter.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingCharacter.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.RollingCharacter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [value changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ValueChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnCharacterIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [character index changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingCharacter.OnCharacterIndexChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CharacterIndexChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingCharacter.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingCharacter.Value"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingCharacter.CharacterIndexChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingCharacter.CharacterIndex"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingCharacter.Value">
            <summary>
            Gets or sets the Value
            </summary>
            <value>Type: <see cref="T:System.Char"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingCharacter.CharacterIndex">
            <summary>
            Gets or sets the CharacterIndex
            </summary>
            <value>Type: <see cref="T:System.Int32"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingCharacter.CornerRadius">
            <summary>
            Gets or sets the CornerRadius
            </summary>
            <value>Type: <see cref="T:System.Double"/></value>
        </member>
        <member name="T:Syncfusion.Windows.Gauge.RollingGauge">
            <summary>
            Represents the RollingGauge UI element.
            </summary>
            <seealso cref="T:Syncfusion.Windows.Gauge.LinearGauge"/>
            <seealso cref="T:Syncfusion.Windows.Gauge.DigitalGauge"/>
            <example>
            <code lang="XAML">
            <Window x:Class="CharacterFourteenSample.Window1" Title="CharacterFourteenSample" Height="400" Width="400" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                    <syncfusion:RollingGauge SegmentBackground="Firebrick" SpaceBetWeenSegment="2" Value="01" SegmentCount="2" Unit="KM" UnitPosition="End">
                    </syncfusion:RollingGauge>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Media;
            using System.Windows.Controls;
            using System.Windows.Data;
            using Syncfusion.Windows.Shared;
            using Syncfusion.Windows.Gauge;<para/>
            namespace CharacterRollingGaugeSample
            {
                    public partial class Window1 : Window
                    {
                        private DigitalGauge digitalGauge1;
                        public Window1()
                        {                
                            InitializeComponent();<para/>
                            RollingGauge rollingGauge = new RollingGauge();
                            rollingGauge.SpaceBetWeenSegment = new Thickness(1);
                            rollingGauge.Value = "11";
                            rollingGauge.Unit = "KM";
                            rollingGauge.UnitPosition = UnitPosition.End;
                            this.Content = rollingGauge;
                        }
                    }
            }   
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.m_segments">
            <summary>
            Collection of Segments.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.m_value">
            <summary>
            Old value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.frame">
            <summary>
            Segment frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.NumericValue">
            <summary>
            Old Numeric Value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.m_segmentCount">
            <summary>
            Represents Current Segment Count
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentWidth">
            <summary>
            Represents Height and Width of the Segment
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentHeight">
            <summary>
            Represents Height and Width of the Segment
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.NumericRotate">
            <summary>
            Handles Direction of Rotation for Numeric Values
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge._Initialized">
            <summary>
            Shows Segments Status
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentVerticalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.AnimationDelayProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.AnimationDelay"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SpaceBetWeenSegmentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SpaceBetWeenSegment"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentHorizontalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderThickness"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.MinValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.MinValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.MaxValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.MaxValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentCornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.IsNumericProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.IsNumeric"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.IsAutomaticSegmentCountEnabledProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.IsAutomaticSegmentCountEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentCountProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCount"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.ValueProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentFontSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentForegroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.DirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Direction"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.UnitProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Unit"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.SegmentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Gauge.RollingGauge.UnitPositionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.UnitPosition"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Gauge.RollingGauge"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Gauge.RollingGauge"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.Segments_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when Segments collection Changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.RollingGauge_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when control is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The object containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.Initialize">
            <summary>
            Initialize the Height and Width of the Segment
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.AddSegments">
            <summary>
            Adds Segments to Rolling gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.RefreshSegmentValue">
            <summary>
            Refresh the change in Rolling Value
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.RollClockwise(System.Char,System.Int32,System.Char)">
            <summary>
            Roll the Segment in ClockWise Direction
            </summary>
            <param name="val">Current Value</param>
            <param name="index">Index of the Segment in Stackpanel</param>
            <param name="oldValue">Old Value</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.RollAntiClockwise(System.Char,System.Int32,System.Char)">
            <summary>
            Roll the Segment in AntiClockWise Direction
            </summary>
            <param name="val">CurrentValue</param>
            <param name="index">Index of the segment in the stackpanel</param>
            <param name="oldValue">Old Value</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.GetRollingCharacter(Syncfusion.Windows.Gauge.RollingCharacter)">
            <summary>
            Create the new Rolling Character
            </summary>
            <param name="character1">Specifies the Current properties</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.RefreshRollingGauge">
            <summary>
            Refresh the gauge when PropertyChanges
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.SetProperties(Syncfusion.Windows.Gauge.RollingCharacter)">
            <summary>
            Set properties for Rolling Character
            </summary>
            <param name="character">The character.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentForegroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment foreground changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment count changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentCountChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SegmentCountChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentVerticalAlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment count changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentVerticalAlignmentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SegmentCountChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentHorizontalAlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment count changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentHorizontalAlignmentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SegmentCountChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentBackgroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment background changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [value changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ValueChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnDirectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [direction changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:DirectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnUnitChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [unit changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnUnitChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:UnitChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [segment template changed].
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnSegmentTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SegmentTemplateChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnUnitPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [unit position changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnUnitPositionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:UnitPositionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnIsEnableAutomaticSegmentCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is enable automatic segment count changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnMinValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [max value changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnMaxValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [min value changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Gauge.RollingGauge.OnIsNumericChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is numeric changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.SegmentCountChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCount"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.SegmentHorizontalAlignmentChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCount"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.SegmentVerticalAlignmentChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCount"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.ValueChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Value"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.DirectionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Direction"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.UnitChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Unit"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.SegmentTemplateChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentTemplate"/> property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Gauge.RollingGauge.UnitPositionChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.UnitPosition"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.IsAutomaticSegmentCountEnabled">
            <summary>
            Gets or sets IsAutomaticSegmentCountEnabled
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.IsNumeric">
            <summary>
            Gets or sets IsNumeric
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.MinValue">
            <summary>
            Gets or sets MinValue. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.MaxValue">
            <summary>
            Gets or sets MaxValue. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCornerRadius">
            <summary>
            Gets or sets SegmentCornerRadius
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderBrush">
            <summary>
            Gets or sets SegmentBorderBrush
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBorderThickness">
            <summary>
            Gets or sets SegmentBorderThickness
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SpaceBetWeenSegment">
            <summary>
            Gets or Sets SpaceBetWeenSegment
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentHorizontalAlignment">
            <summary>
            Gets or sets SegmentHorizontalAlignment
            </summary>
            <value>The segment horizontal alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentVerticalAlignment">
            <summary>
            Gets or sets SegmentVerticalAlignment
            </summary>
            <value>The segment vertical alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.AnimationDelay">
            <summary>
            Gets or sets AnimationDelay
            </summary>
            <value>The animation delay.</value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.CornerRadius">
            <summary>
            Gets or sets the gauge's corner radius . This is a dependency property.
            </summary>
            <value>
            CornerRadius
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentTemplate">
            <summary>
            Gets or sets the Segment Template
            </summary>
            <value>Type: <see cref="T:System.Windows.DataTemplate"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.Unit">
            <summary>
            Gets or sets the Unit
            </summary>
            <value>Type: <see cref="T:System.String"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.Segments">
            <summary>
            Gets or sets the collection of segments;
            </summary>
            <value>Type: <see cref="T:Syncfusion.Windows.Gauge.SegmentCollection"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentForeground">
            <summary>
            Gets or sets the SegmentForeground
            </summary>
            <value>Type: <see cref="T:System.Windows.Media.Brush"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentBackground">
            <summary>
            Gets or sets the SegmentBackground
            </summary>
            <value>Type: <see cref="T:System.Windows.Media.Brush"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentFontSize">
            <summary>
            Gets or sets the SegmentFontSize
            </summary>
            <value>Type: <see cref="T:System.Double"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.Value">
            <summary>
            Gets or sets the Value
            </summary>
            <value>Type: <see cref="T:System.String"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.SegmentCount">
            <summary>
            Gets or sets the SegmentCount
            </summary>
            <value>Type: <see cref="T:System.Int32"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.Direction">
            <summary>
            Gets or sets the Direction
            </summary>
            <value>Type: <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Direction"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Gauge.RollingGauge.UnitPosition">
            <summary>
            Gets or sets the Unitposition
            </summary>
            <value>Type: <see cref="P:Syncfusion.Windows.Gauge.RollingGauge.Direction"/></value>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
